module namespace isilex = 'http://www.isilex.fr'; import module namespace session = "http://basex.org/modules/session"; import module namespace sessions = "http://basex.org/modules/sessions"; import module namespace request = "http://exquery.org/ns/request"; import module namespace isi = 'http://www.isilex.fr/isi-repo'; declare %rest:path('/edit-{$file}') %output:method("html") %output:omit-xml-declaration("no") function isilex:editFile($file) as element(html) { <html> { if ( $isi:testid4 ) then let $page := <texteAccueil> <link rel="stylesheet" href="/static/codemirror/lib/codemirror.css"/> <link rel="stylesheet" href="/static/codemirror/addon/hint/show-hint.css"/> <script src="/static/codemirror/lib/codemirror.js"></script> <script src="/static/codemirror/mode/css/css.js"></script> <script src="/static/codemirror/addon/hint/show-hint.js"></script> <script src="/static/codemirror/addon/hint/css-hint.js"></script> <h2>Edit CSS and Designs</h2> <form method="POST" action="/cssSave" id="editCss"> <textarea id="code" name="cssContent" cols="60" rows="30"> {file:read-text(file:base-dir()||'static/CSS/03/'||lower-case($file)||'.css')} </textarea> <input type="hidden" name="fileName" value="{(lower-case($file))}"/> <p><input type="submit" value="OK"/></p> </form> <script> var editor = CodeMirror.fromTextArea(document.getElementById("code"), &#x0007B; extraKeys: &#x0007B;"Ctrl-Space": "autocomplete"&#x0007D;,&#x0007D;); </script> </texteAccueil> return isi:template($page) else isi:template(isi:lang-text('unauthorized_access')) } </html> }; declare %rest:path('/cssSave') %updating %rest:POST %rest:form-param("fileName","{$file}","") %rest:form-param("cssContent","{$css}","") function isilex:cssSave($css, $file){ let $filePath := file:base-dir()||'static/CSS/03/'||$file||'.css' return (db:output(<rest:redirect>/edit-{$file}</rest:redirect>) , file:write($filePath,$css,map { "method": "text"}) ) }; (: ****************************************************************** Le fichier du moteur de Recherches (c) - I-Def // Algo réalisé par X.-L.S. Exploité initialement en partie dans le moteur idef(x) ****************************************************************** :) declare %rest:path('/gere-site') %output:method("html") %output:omit-xml-declaration("no") function isilex:gere-site() { if ( $isi:testid3 or $isi:testid4 ) then let $page := ( <form action='/update-site' method='POST'> <table> <th>{isi:t('website')} - Many Isilex functions are not yet available for Lite Version Users. If you want to see what coumd be done, consult <a href='http://www.isilex.fr'>Isilex site</a>. And <a class='button' href="/isilexOptim-Parametrage fin">Optimisation en cours</a> for wide overview of what we are working on</th> <tr> <td>Valider:</td> <td><input type='submit' placeHolder="" value='{isi:t('send')}'></input></td> </tr> <tr> <td>Validation par le modérateur. <a href="/isilexOptim-Validation par le chef de projet">Optimisation en cours</a></td> <td style="display:flex;flex-direction:row;justify-content:center;"> <div class="switch off"> <label> </label> </div> <a href="http://www.isilex.fr/page/Download" style="margin-left:20px;margin-top:13px;">Optimisation en cours</a> </td> </tr> <tr> 	<td>masterAdmin password</td> 	<td><input class="adminInput" name='passwordMA' placeHolder="XXXXX" value=''></input></td> </tr> <tr> <td>{isi:t('website_name')}</td> <td> <input class="adminInput" name='domaine-name' placeHolder="{$isi:titre-name}" value=''></input> </td> </tr> <tr> <td>{isi:t('website_address')}</td> <td><input class="adminInput" name='domaine' placeHolder="{$isi:domaine}" value=''></input></td> </tr> <tr> <td>UnoconvDir</td> <td>Gestion des exportations Word <a href="/isilexOptim-Exportation Word et PDF">Optimisation en cours</a></td> </tr> <tr id="#stopGroup"> <td> Ajouter un groupe: </td> <td> <a href="/isilexOptim-Gestion MultiGroupes">Optimisation en cours</a> </td> </tr> <tr> <td id="stop">Base Active (changer la base de chaque utilisateur ou affecter une base à un utilisateur) </td> <td><a href="/isilexOptim-Gestion multiBases">Optimisation en cours</a></td> </tr> <tr> <td>TagCloud element you want to archive</td> <td> <input class="adminInput" name='tagCloud' placeHolder="{$isi:tagCloudXML}" value=''></input> </td> </tr> <tr> <td>{isi:t('footer')}</td> <td><textarea class="adminInput" size='50' type='textarea' rows='4' placeHolder="{db:open('site')/*:root/*:footer-text/text()}" cols='60' name='footer' ></textarea></td> </tr> <tr> <td>XSD on</td> <td style="display:flex; flex-direction:row;justify-content:center"> <div class="switch off"> <input type="checkbox" onClick=""/> <label></label> </div> <a href="/isilexOptim-Modification du protypage de saisie" style="margin-top:13px;margin-left:20px;">Optimisation en cours</a> </td> </tr> <tr> <td>Alphabet: basculer en mode Réseau Social. Les fiches sont indexées selon la date de leur publication</td> <td> <a href="/isilexOptim-TimeLine façon Réseau Social">Optimisation en cours</a> </td> </tr> <tr> <td>Forum: activer ou désactiver le Forum <b>pour chaque fiche</b></td> <td> <a href="/isilexOptim-Désactiver le Forum">Optimisation en cours</a> </td> </tr> <tr> <td>Lien Facebook</td> <td><a href="/isilexOptim-Ajouter un lien facebook">Optimisation en cours</a></td> </tr> <tr> <td>Lien twitter</td> <td><a href="/isilexOptim-Ajouter un compte Twitter">Optimisation en cours</a></td> </tr> <tr> <td>Lien Google Plus</td> <td><a href="/isilexOptim-Ajouter un compte Google+">Optimisation en cours</a></td> </tr> <tr> <td>CSS<br/>Modifier son propre CSS [Pour cela, activer le CSS intitulé 03] <a href="/cssEdit">Edit your own: first, select 3</a></td> <td style='width=25px;'>  { let $dirHard := concat(replace(file:base-dir(),'repo.*',''),"/static/CSS/") for $dir in file:list($dirHard)[matches(.,'/')] let $css := replace($dir,'/','') return <div style='float:left ;margin-right:10px' class="switch {if (db:open('site')/root/css=$css) then 'on' else 'off'}"> <input type="checkbox" onClick="location.href='/css-{if (db:open('site')/root/css=$css) then '02' else $css}';"/>{$css}<label></label></div> }</td> </tr> </table> <br/> <h2>Web Site Pages Administration and Creation</h2> <table> <th>Pages - <a href="http://www.isilex.fr/page/Download"><a href="/page--"> ++ Ajouter une page ++</a></a></th> <tr><td><a href="">Un développement est prévu pour exporter leurs fiches XML par lots groupés au format PDF ou Word</a></td><td><a href="/isilexOptim-Exporter des fiches XML par lots au format Word">Optimisation en cours</a></td></tr> {for $i in (db:open('pages')//page) return <tr> <td><a href= '/page{if (db:open("site")/root/tiny = "on") then "HTML" else ()}-{ if (db:open("utilisateurs")//entry[.//id=session:id()]/lang) then db:open("utilisateurs")//entry[.//id=session:id()]/lang else "fr" }-{ if (db:open("utilisateurs")//entry[.//id=session:id()]/lang) then $i/name[@lang=db:open("utilisateurs")//entry[.//id=session:id()]/lang] else $i/name[@lang='en']}'>{ if (db:open("utilisateurs")//entry[.//id=session:id()]/lang) then $i/name[@lang=db:open("utilisateurs")//entry[.//id=session:id()]/lang] else $i/name[@lang='en'] }</a></td><td>Un utilisateur expert efface et modifie les pages existantes simplement <a href="/isilexOptim-Effacer des pages existantes">Optimisation en cours.</a></td></tr> } </table><br/><table> </table> </form> , <form style='display:none;' id="bddc" name="bddc" action="/bddCreation" method="POST"> <input id="nomDeux" class="adminInput" name='nomBase' value=''></input> <input type="submit" class="button"/> </form> , <form style='display:none;' id="bddx" name="bddx" action="/bddTrash" method="POST"> <input id="nomTrash" class="adminInput" name='nomTrash' value=''></input> <input type="submit" class="button"/> </form> , <form style='display:none;' id="affectfDb2Group" method="POST" action="/db2Group"> <input type="text" name="groupDb" id="groupDb"/> <input type="text" name="bddDb" id="bddDb"/> </form> ) return isi:template($page) else isi:template(isi:t('unauthorized_access')) }; declare %rest:path('/bddCreation') %updating %rest:POST %rest:form-param("nomBase","{$nomBase}","") function isilex:createBdd($nomBase){ ( if ($nomBase!=db:list()) then (db:output(<rest:redirect>/gere-site#stop</rest:redirect>) , ( db:create('bdd_'||$nomBase, file:base-dir()||'static/root/root.xml') , if (not($nomBase='bdd')) then replace value of node db:open('site')/root/dtd with 'off' else replace value of node db:open('site')/root/dtd with 'on' ) ) else () ) }; declare %rest:path('/removeGroup-{$group}') %updating function isilex:trashgroup($group){ (db:output(<rest:redirect>/gere-site#stopGroup</rest:redirect>), (for $x in db:open('site')//masterGroups/name[.=$group] return delete node $x , for $x in db:open('utilisateurs')//matserGroup/name[.=$group] return replace value of node $x with '' ) ) }; declare %rest:path('/bddTrash') %updating %rest:POST %rest:form-param("nomTrash","{$nomTrash}","") function isilex:trashBdd($nomTrash){ ( if ($nomTrash=db:list()) then (db:output(<rest:redirect>/gere-site#stop</rest:redirect>),db:drop($nomTrash)) else () ) }; declare %rest:path('/db2Group') %updating %rest:POST %rest:form-param("groupDb","{$group}","") %rest:form-param("bddDb","{$bdd}","") function isilex:db2Group($group, $bdd){ db:output(<rest:redirect>/gere-site#stopGroup</rest:redirect>), for $x in db:open('site')/root/masterGroups/name[.=$group] return if ($x/@bdd) then replace value of node $x/@bdd with $bdd else insert node attribute bdd {string($bdd)} into $x , for $x in db:open('utilisateurs')//entry[./masterGroup/name=data($group)] return if ($x/bdd) then replace value of node $x/bdd with $bdd else insert node <bdd>{$bdd}</bdd> as first into $x }; declare %rest:path('/list') %output:method("html") function isilex:list(){ ( for $x in (db:list()) return <p>{$x}</p> ) }; declare %updating %rest:path('/switchBdd-{$on}') function isilex:switchBdd($on) { ( db:output(<rest:redirect>/rubrique/A/1</rest:redirect>), let $activeBdd := if ($on = '1') then 'bdd_isilex' else 'bdd' let $dtd := if ($on = '1') then 'off' else 'on' return ( replace value of node db:open('site')/root/activeBdd with $activeBdd, for $x in db:open('utilisateurs')//entry/bdd[not(./@verrou)] return replace value of node $x with $activeBdd, replace value of node db:open('site')/root/dtd with $dtd ) ) }; declare %updating %rest:POST %rest:form-param('userBddName','{$name}') %rest:form-param('baseBddName','{$base}') %rest:path('/switchBddPerso') function isilex:switchBddPerso($name, $base) { ( db:output(<rest:redirect>/gere-users</rest:redirect>), for $x in db:open('utilisateurs')//entry[./name=$name]/bdd return replace value of node $x with $base, if (not($base='bdd')) then if (not(db:open('utilisateurs')//entry[./name=$name]/bdd/@verrou)) then for $x in db:open('utilisateurs')//entry[./name=$name]/bdd return insert node attribute verrou {''} into $x else () else if ((db:open('utilisateurs')//entry[./name=$name]/bdd/@verrou)) then for $x in db:open('utilisateurs')//entry[./name=$name]/bdd/@verrou return delete node $x else () ) }; declare %updating %rest:POST %rest:form-param('userMasterGroup','{$name}') %rest:form-param('groupMasterGroup','{$group}') %rest:path('/masterGroupDef') function isilex:masterGroupDef($name, $group) { db:output(<rest:redirect>/gere-users</rest:redirect>), for $x in db:open('utilisateurs')//entry[./name=$name]/masterGroup/name return (replace value of node $x with $group), for $x in db:open('utilisateurs')//entry[./name=$name] return replace value of node $x/bdd with data(db:open('site')/root/masterGroups/name[.=$group]/@bdd) }; declare %updating %rest:path('/switchCss-{$on}') function isilex:switchCSs($on) { (db:output(<rest:redirect>/</rest:redirect>), let $css := if ($on = '02') then '02' else '01' return replace value of node db:open('site')/root/css with $css) }; declare %updating %rest:path('/update-site') %rest:POST %rest:form-param("domaine-name","{$domaine-name}","") %rest:form-param("domaine","{$domaine}","") %rest:form-param("accueil","{$accueil}","") %rest:form-param("footer","{$footer}","") %rest:form-param("user","{$user}","") %rest:form-param("passs","{$passs}","") %rest:form-param("unoconv","{$unoconv}","") %rest:form-param("activeBdd","{$activeBdd}","") %rest:form-param("tagCloud","{$tagCloud}","") %rest:form-param("faceBookIsi","{$faceBookIsi}","") %rest:form-param("twitterIsi","{$twitterIsi}","") %rest:form-param("googleIsi","{$googleIsi}","") %rest:form-param("passwordMA","{$passwordMA}","") %rest:form-param("addMasterGroup","{$addMasterGroup}","") function isilex:update-site($domaine-name,$domaine,$accueil,$footer,$user,$passs,$unoconv,$activeBdd,$tagCloud,$addMasterGroup,$faceBookIsi,$passwordMA,$twitterIsi,$googleIsi){ db:output(<rest:redirect>/gere-site</rest:redirect>),if ($isi:testid4) then ( if ($domaine-name != '') then replace value of node db:open('site')/root/domaine-name with $domaine-name else (), if ($domaine != '') then replace value of node db:open('site')/root/domaine with $domaine else (), if ($accueil != '') then replace value of node db:open('site')/root/accueil with $accueil else (), if ($footer != '') then replace value of node db:open('site')/root/footer-text with $footer else (), if ($unoconv != '') then replace value of node db:open('site')/root/unoconv with $unoconv else (), if ($faceBookIsi != '') then replace value of node db:open('site')/root/facebook with $faceBookIsi else (), if ($twitterIsi != '') then replace value of node db:open('site')/root/facebook with $twitterIsi else (), if ($googleIsi != '') then replace value of node db:open('site')/root/facebook with $googleIsi else (), if ($passwordMA != '') then replace value of node db:open('utilisateurs')//entry[./masteradmin='true']/password with crypto:hmac($passwordMA,'isilex','sha512','base64') else (), if ($activeBdd != '') then ( replace value of node db:open('site')/root/activeBdd with $activeBdd, for $x in db:open('utilisateurs')//entry/bdd[not(./@verrou)] return replace value of node $x with $activeBdd ) else (), if ($tagCloud != '') then replace value of node db:open('site')/root/tagCloud with $tagCloud else (), if ($addMasterGroup != '') then if (not(db:open('site')/root/masterGroups/name[.=$addMasterGroup])) then insert node <name>{$addMasterGroup}</name> into db:open('site')/root/masterGroups else () else () ) else () }; declare %rest:path('/gere-users') %output:method("html") %output:omit-xml-declaration("no") function isilex:gere-users() as element(html) { if ( session:id() = db:open('utilisateurs')/utilisateurs/entry[./masteradmin='true']/sessions/session/id ) then let $contenu := <div id="listeUsers" style="float:left; width:30%;"> <table> <tr class="userTab"> <th>Site: Membres</th> <th>Site: Admin</th> <th>Site: Curator</th> <th>Site: User</th> {for $x in db:open('site')/root/masterGroups/name return <th>Project Task: {data($x)}</th>} <th>Delete</th> </tr> { for $x in db:open('utilisateurs')/utilisateurs/entry[not(masteradmin='true')][not(./name='isilex')] return (<tr id="view-{data($x/name)}"> <td class="userDesc"> <ul class="tabUserAdmin"> { <li>{data($x/name)}</li>, <li>{data($x/mail)}</li>, <br/>, <p>Un utilisateur expert peut affecter à un utilisateur différentes bases de travail <a href="http://www.isilex.fr">Ask for optimisation</a></p> } </ul> </td> <td class="userSelect" > <div class="switch {if ($x/usertype='admin') then 'on' else 'off'}"> <input type="checkbox" style="margin-left: -15px;" onClick="location.href='/up-user/{$x/name}/admin';"/> <label></label> </div> </td> <td class="userSelect"> <div class="switch {if ($x/usertype='curator') then 'on' else 'off'}"> <input type="checkbox" style="margin-left: -15px;" onClick="location.href='/up-user/{$x/name}/curator';"/> <label></label> </div> </td> <td class="userSelect"> <div class="switch {if ($x/usertype='user') then 'on' else 'off'}"> 	 <input type="checkbox" style="margin-left: -15px;" onClick="location.href='/up-user/{$x/name}/user';"/> 	 <label></label> </div> </td> { for $mgrou in db:open('site')/root/masterGroups/name return <td class="userSelect"> <div class="switch {if ($x/masterGroup/name=$mgrou) then 'on' else 'off'}"> <input type="checkbox" style="margin-left: -15px;" onClick=" document.getElementById('userMasterGroup').value='{data($x/name)}'; document.getElementById('groupMasterGroup').value='{$mgrou}'; document.getElementById('mgPerso').submit(); "/> <label></label> </div> </td> } <td> <a href="cancelFiche-user_{$x/name}"><img height="15px" src="./static/images/recycle-bin-icons.png"/></a> </td> <tr style="display:none;" id='displayBases-{data($x/name)}'> <td><a onClick="document.getElementById('displayBases-{data($x/name)}').style.display='none';" class="button" href="#view-{data($x/name)}"> - </a></td><td>Affect Database to {data($x/name)}</td> <td><a class="{if ( db:open('utilisateurs')//entry[./name=data($x/name)]/bdd='bdd') then 'baseSelected' else ()}" onClick=" document.getElementById('userBddName').value='{data($x/name)}'; document.getElementById('baseBddName').value='bdd'; document.getElementById('sPerso').submit(); " href="#view-{data($x/name)}">Web</a></td> {for $bases in db:list()[matches(.,'bdd_')] return <td><a class="{if ( db:open('utilisateurs')//entry[./name=data($x/name)]/bdd=$bases) then 'baseSelected' else ()}" href="#view-{data($x/name)}" onClick=" document.getElementById('userBddName').value='{data($x/name)}'; document.getElementById('baseBddName').value='{data($bases)}'; document.getElementById('sPerso').submit(); " > {$bases} </a></td> }</tr> </tr>) } </table> <form id="sPerso" name="sPerso" method="Post" action="/switchBddPerso"> <input type="hidden" value="" name="userBddName" id="userBddName"/> <input type="hidden" value="" name="baseBddName" id="baseBddName"/> </form> <form id="mgPerso" name="mgPerso" method="Post" action="/masterGroupDef"> <input type="hidden" value="" name="userMasterGroup" id="userMasterGroup"/> <input type="hidden" value="" name="groupMasterGroup" id="groupMasterGroup"/> </form> </div> return isi:template($contenu) else isi:template(isi:t('unauthorized_access')) }; declare %updating %rest:path('/up-user/{$user=.+}/{$rang=.+}') function isilex:up-user($user as xs:string*,$rang as xs:string* ) { db:output(<rest:redirect>/gere-users</rest:redirect>), if (session:id()= db:open('utilisateurs')/utilisateurs/entry[masteradmin='true']//id and $rang=('user','admin','curator')) then for $i in db:open('utilisateurs')/utilisateurs/entry[name=$user] return replace value of node $i/usertype with $rang else () }; declare %updating %rest:path('/alphabet-{$on}') function isilex:up-user($on) { db:output(<rest:redirect>/gere-site</rest:redirect>), if ($isi:testid4) then for $x in db:open('site')/root/alphabet return replace value of node $x with $on else db:output(isi:template(isi:t('unauthorized_access'))) }; declare %updating %rest:header-param("Referer", "{$referer}", "none") %rest:path('/alphabetC-{$on}') function isilex:erereer($on, $referer) { db:output(<rest:redirect>{$referer}</rest:redirect>), for $x in db:open('site')/root/alphabet return replace value of node $x with $on }; declare %updating %rest:path('/tiny-{$on}') function isilex:up-tiny($on) { db:output(<rest:redirect>/gere-site</rest:redirect>), if ($isi:testid4) then for $x in db:open('site')/root/tiny return replace value of node $x with $on else db:output(isi:template(isi:t('unauthorized_access'))) }; declare %updating %rest:path('/forum-{$on}') function isilex:up-forum($on) { db:output(<rest:redirect>/gere-site</rest:redirect>), if ($isi:testid4) then for $x in db:open('site')/root/forum return replace value of node $x with $on else db:output(isi:template(isi:t('unauthorized_access'))) }; declare %updating %rest:path('/dtd-{$on}') function isilex:up-dtd($on) { db:output(<rest:redirect>/gere-site</rest:redirect>), if ($isi:testid4) then for $x in db:open('site')/root/dtd return replace value of node $x with $on else db:output(isi:template(isi:t('unauthorized_access'))) }; declare %updating %rest:path('/cancelFiche-user_{$user}') function isilex:eraseUser($user) { db:output(<rest:redirect>/gere-users</rest:redirect>), if ($isi:testid4) then for $x in db:open('utilisateurs')//entry[name=$user] return delete node $x else db:output(isi:template(isi:t('unauthorized_access'))) }; declare %updating %rest:path('/css-{$num}') function isilex:cssChange($num) { if ($isi:testid4) then( db:output(<rest:redirect>/gere-site</rest:redirect>), for $x in db:open('site')/root/css return replace value of node $x with $num) else db:output(isi:template(isi:t('unauthorized_access'))) }; declare %rest:path('masteradmin') %output:method('html') function isilex:ma(){ if (db:open('utilisateurs')//masteradmin='true') then (<rest:redirect>/</rest:redirect>) else let $c := <form method='POST' action='maup'> <table> <tr><td><h1>Master admin configuration</h1></td><td/></tr> <tr><td>Username</td><td> <input class="adminInput" type='text' name='username' placeholder="admin User Name"></input></td></tr> <tr><td>Email </td><td><input class="adminInput" name='mail' placeholder="admin's mail"></input></td></tr> <tr><td>Password </td><td><input class="adminInput" name='pass' type='password' placeholder="Password"></input></td></tr> <tr><td>Password again</td><td> <input class="adminInput" name='pass2' type='password' placeholder="Retype your passaword"></input></td></tr> <tr><td>Key</td><td> <input class="adminInput" name='key' type='password' placeholder="IsilexKey"></input></td></tr> <tr><td></td><td><input type='submit'></input></td></tr> </table> </form> return isi:template($c) }; declare %updating %rest:path('maup') %output:method('html') %rest:POST %rest:form-param('username','{$username}','') %rest:form-param('pass','{$pass}','') %rest:form-param('pass2','{$pass2}','') %rest:form-param('key','{$key}','') %rest:form-param('mail','{$mail}','') function isilex:maup($username,$pass,$key,$mail,$pass2){ if($username!='' and $pass != '' and $key != '' and $mail != '' and $pass=$pass2 and not (db:open('utilisateurs')//masteradmin='true')) then if(crypto:hmac($key,'isilex','sha512','base64')= db:open('site')/root/key and not (db:open('utilisateurs')//masteradmin='true')) then (insert node <entry><masteradmin>true</masteradmin><lang>en</lang><name>{$username}</name><mail>{$mail}</mail><password>{crypto:hmac($pass,'isilex','sha512','base64')}</password><usertype>administrator</usertype><sessions><session><id>{session:id()}</id><timeStamp>{current-dateTime()}</timeStamp></session></sessions></entry> as first into db:open('utilisateurs')/*, db:output(<rest:redirect>/</rest:redirect>) ) else db:output('Forbidden access') else db:output('Forbidden access') }; declare %rest:path('isilexOptim-{$mess}') %rest:header-param("Referer", "{$referer}", "none") %output:method('html') function isilex:goldenize($mess, $referer){ isi:template( <div> <h1>Fonctions <a href="http://www.isilex.fr/page/Download">[<u>{$mess}</u>]</a> IsilexLite optimisé</h1> <p>La fonction [{$mess}] sera active bientôt.</p> <p>Pour obtenir plus d'informations, nous vous invitons à adresser un message à l'adresse <a href="mailto:isilex@isilex.fr">Isilex.fr</a>.</p> <p><a class="button" href="{$referer}">Revenir</a> <a class="button" href="http://www.isilex.fr/page/Download">Demander une optimisation.</a></p> </div> ) }; declare %rest:path('/tout/{$nb}') %output:method('html') function isilex:rubrique-tout($nb){ let $contenu :=( if ($nb!=1) then <a href="/tout/{$nb -1}"> <img height="20px" src="/static/images/Preceding.png"/> </a> else () , if (count(db:open($isi:bdd)//fiche) <= $nb*100) then () else <a href="/tout/{$nb+1}"> <img height="20px" src="/static/images/Next.png"/> </a>, <h2>Fiches</h2> , <ul style=" flex-direction: row; flex-wrap: wrap; justify-content: space-around; border: solid 2px; min-height: 100px; max-width: 500px; " >{ for $i in db:open($isi:bdd)/*/fiche[position()> 100*($nb -1)][position()<=100] order by ($i/entry/form/orth)[1] return <li class='index' style=" " > <a href="/fiche/{$i/id/data()}">{if(upper-case($i/entry/form/orth[1])) then (upper-case($i/entry/form/orth[1])) else '!Pas de vedette'}</a> </li> }</ul> , <br/>,<br/>,<br/> ) return isi:template($contenu) }; declare %rest:path('/rubrique/{$path=.+}/{$indice=[0-9]+}') %output:method("html") %output:omit-xml-declaration("no") function isilex:rubrique($path,$indice) { let $l := string-join(('^',$path)) let $al := if ($path = ('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z')) then ( <h2>{isi:t('letter'),' ',$path}</h2>, <table>{((for $i at $count in db:open($isi:bdd)/*/fiche [matches((entry/form/orth)[1],concat('^',$l),'i')] [some $o in entry/form/orth satisfies matches($o,concat('^',$l),'i')] [if ($isi:systemV='on') then valid='true' or auteur=$isi:name else valid] (:La restriction sur l'affichage si la validation est active:)  where $count gt xs:integer($indice)  and $count lt xs:integer($indice) + 9 (:$isi:di:) order by xs:dateTime($i/creationDate) descending return <tr> <td class="{if ($i/auteur=$isi:name) then 'miens' else 'index'} {if ($i/valid='true') then () else 'enCours'} "> <a href='{if ($i/valid="true") then "/fiche/"||$i/id/text() else if ($i/form/auteur=$isi:name) then "/fiche/"||$i/id/text() else ( "/fiche/"||$i/id/text() ) }' > {upper-case(($i/entry/form/orth)[1])} </a> </td> </tr> )) }</table> , <div id="dddd">{ let $cnt := count(db:open($isi:bdd)/*/fiche [matches(entry/form/orth,concat('^',$l),'i')] [if ($isi:systemV='on') then valid='true' or valid='ask' or auteur=$isi:name else valid ] ) return( if (xs:integer($indice) - 1 lt 10) then <a href="/rubrique/{$path}/{xs:integer($indice) - (xs:integer($indice) - 1)}"> <img height="20px" src="/static/images/Preceding.png"/> </a> else let $diff := $cnt - xs:integer($indice) return <a href="/rubrique/{$path}/{xs:integer($indice) - 10}"> <img height="20px" src="/static/images/Preceding.png"/> </a> , <div id="mm">{$indice} / {$cnt}</div> , if ($cnt - xs:integer($indice) lt 10) then <a href="/rubrique/{$path}/1"><img height="20px" src="/static/images/Next.png"/></a> else let $diff := $cnt - xs:integer($indice) return <a href="/rubrique/{$path}/{xs:integer($indice) + 10}"> <img height="20px" src="/static/images/Next.png"/> </a> ) }</div> ) else ( <h2>Tags</h2>, <ul>{ for $i in db:open($isi:bdd)/*/fiche[tags/tag=$path] return $i} </ul> ) return isi:template($al) }; declare %rest:path("/categories") %output:method("html") %output:omit-xml-declaration("no") function isilex:cat() { isi:template( <div> <h2>Categories</h2> {for $x in ( 	distinct-values(db:open($isi:bdd)//@med[not(.='')]),(:vestige des premières DTD:) 	distinct-values(db:open($isi:bdd)//@mod[not(.='')]), 	distinct-values(db:open($isi:bdd)//@dom[not(.='')]), 	distinct-values(db:open($isi:bdd)//usg[not(.='')])(:la CATEGORIE correspond à l'élément <usg/> de la fiche:) 	) order by $x return <ul class="tabUserAdmin"> <li><a class="button" href="#" onClick="document.getElementById('idefx').value='{data($x)}';document.getElementById('idefx3').submit();">#{data($x)}</a></li> </ul>} </div> ) }; declare %rest:path('/fiche/{$path=.+}') %output:method("html") %output:omit-xml-declaration("no") function isilex:fiche($path) as element(html) { let $contenu := if (upper-case($path) != 'FORUMISILEX') then if (db:open($isi:bdd)/*/fiche[id=$path]/entry or db:open($isi:bdd)/*/fiche[upper-case((entry//orth)[1])=upper-case($path)]/entry) (:On teste sur l'ID OU la vedette:) then ( if ($isi:testid3 or $isi:testid4) then <a style="padding-left: 10px;" href="/wdvhgj{$path}" class=""><img class='zoom' src='/static/images/recycle-bin-icons.png' width='35px'/></a> else () , <a style="padding-left: 10px;" href='/modif-{$path}'><img class='zoom' width='35px' src='/static/images/svg/writing.svg'/></a> , if (db:open('site')/root/forum='on') then <a style="padding-left: 10px;" class="" href="#commFiches"><img class='zoom' width='35px' src='/static/images/svg/chat.svg'/></a> else () , <a style="padding-left: 10px;" href="/Images" class=""><img class='zoom' width='35px' src='/static/images/svg/violin.svg'/></a> , <a style="padding-left: 10px;" href="/isilexOptim-Word" class=""><img class='zoom' width='35px' src='/static/images/6876.png'/></a> , <a style="padding-left: 10px;" href="/isilexOptim-PDF" class=""><img class='zoom' width='35px' src='/static/images/32907.png'/></a> , if (db:open($isi:bdd)/*/fiche[id=$path]/entry) then db:open($isi:bdd)/*/fiche[id=$path]/entry else if (db:open($isi:bdd)/*/fiche[upper-case(entry//orth)=upper-case($path)]) then db:open($isi:bdd)/*/fiche[upper-case(entry//orth)=upper-case($path)]/entry else () (:On teste sur les ID ou les VEDETTES MERCI !:) ) else ( if (not($path="FORUM")) then <a class='button' href='{ if ($isi:testid2) then "/modif-{$path}" else "/login"}'>Modifier</a> else () , if (db:open($isi:bdd)/*/fiche[id=$path]/entry) then db:open($isi:bdd)/*/fiche[id=$path]/entry else if (db:open($isi:bdd)/*/fiche[upper-case(entry//orth)=upper-case($path)]) then db:open($isi:bdd)/*/fiche[upper-case(entry//orth)=upper-case($path)]/entry else () (:On teste sur les ID ou les VEDETTES MERCI !:) ) else <entry>Le lieu de parler d &#x00027; Isilex</entry> return if ($contenu) then isi:template( ( <div id="cp" style='display:none'></div>, (:**********Si lien ou image afficher en haut de la fiche*********:) if ($contenu//note//@src contains text 'http://' or $contenu//note//@href contains text 'http://') then for $x at $counter in (($contenu//note//@src), ($contenu//note//@href))[. contains text 'http://'] let $http:= analyze-string(string($x),'http://[^ ]*')//fn:match let $num := count($http) return if ($num = 1) then for $h at $c in $http return <div id="panelImg{$counter}" onMouseOver="document.getElementsByTagName('ref')[{$counter - 1}].style.border='8px solid red';" onMouseOut="document.getElementsByTagName('ref')[{$counter - 1}].style.border='none';"> <div id="minimenu" style="display:block;"> <!-- *********************************************** Le texte du menu de la Gallerie sur ISILEX <a id="gal2{$counter}" onClick="document.getElementById('iframe{$counter}').style.height='200px'; document.getElementById('iframe{$counter}').style.width='200px'; var compteur = document.getElementById('compteur').innerHTML; document.getElementById('iframe2{$counter}').src=document.getElementById('num').getElementsByTagName('indexNum')[compteur].innerHTML;" href="http://www.isilex.fr/img/illustrIsi.png" target="panelImg{$counter}"> {$num} <img height="10px" src="/static/images/Preceding.png"/> </a> <a id="gal3{$counter}" style="font-size: 0.5em" onClick="document.getElementById('iframe{$counter}').style.height='400px'; document.getElementById('iframe{$counter}').style.width='400px'" href="http://www.crealscience.fr" target="panelImg{$counter}"> Web :: </a> <a id="gal4{$counter}" style="font-size: 0.5em" onClick="document.getElementById('iframe{$counter}').style.height='400px'; document.getElementById('iframe{$counter}').style.width='400px'" href="https://www.youtube.com/embed/ZWhNjD0Ztyw" target="panelImg{$counter}"> Video </a> <a id="gal{$counter}" onClick="document.getElementById('iframe{$counter}').style.height='100px'; document.getElementById('iframe{$counter}').style.width='100px'; var compteur = document.getElementById('compteur').innerHTML; document.getElementById('iframe2{$counter}').src=document.getElementById('num').getElementsByTagName('indexNum')[compteur].innerHTML;" href="http://www.isilex.fr/img/illustr3.png" target="panelImg{$counter}"> <img height="10px" src="/static/images/Next.png"/> </a> ********************************* --> </div> <iframe class="illustrationFiche" id="iframe{$counter}" onLoad="var e =Math.floor((Math.random() * 10) + 1); document.getElementById('gal{$counter}').href='http://www.isilex.fr/img/illustr'.concat(e).concat('.png'); document.getElementById('gal2{$counter}').href='http://www.isilex.fr/img/illustr'.concat(e + 1).concat('.png');" onMouseOver="this.style.height='300px'; this.style.width='300px';" onMouseOut="this.style.height='200px'; this.style.width='200px';this.style.zIndex='0'" onMouseClick="this.style.zIndex='20000000';" name="panelImg{$counter}" frameborder="0" border="0" cellspacing="0" seamless="seamless" scrolling="no" width="100" height="100" src='{($h//text())}'/> </div> else <div id="panelImg2{$counter}" onMouseOver="document.getElementsByTagName('ref')[{$counter - 1}].style.border='8px solid red';" onMouseOut="document.getElementsByTagName('ref')[{$counter - 1}].style.border='none';"> <div id="minimenu" style="display:block;"> <div id="num" style="display:none"> <div id="compteur">{$num}</div> <div id="total">{$num}</div> <div id="sens">minus</div> {for $x in (1 to xs:integer($num)) return <div class="indexNum">{$http[$x]//text()}</div>} </div> <!-- *********************************************** Le texte du menu de la Gallerie sur ISILEX <a id="gal2{$counter}" onClick=" document.getElementById('iframe{$counter}').style.height=''; document.getElementById('iframe{$counter}').style.width=''; document.getElementById('sens').innerHTML = 'minus'; var compteur = document.getElementById('compteur').innerHTML; document.getElementById('iframe2{$counter}').src=document.getElementById('num').getElementsByTagName('indexNum')[compteur].innerHTML; " href="http://www.isilex.fr/img/illustrIsi.png" target="panelImg{$counter}"> <div id="temoin" style="float:left; margin-left: 5px;">{$num}</div><img height="10px" src="/static/images/Preceding.png"/> </a> <a id="gal{$counter}" onClick=" document.getElementById('iframe{$counter}').style.height=''; document.getElementById('iframe{$counter}').style.width=''; document.getElementById('sens').innerHTML = 'saucisse'; this.href= document.getElementById('num').getElementsByTagName('indexNum')[1].innerHTML; var compteur = document.getElementById('compteur').innerHTML; document.getElementById('iframe2{$counter}').src=document.getElementById('num').getElementsByTagName('indexNum')[compteur].innerHTML; " href="http://www.isilex.fr/img/illustr3.png" target="panelImg{$counter}"> <img height="10px" src="/static/images/Next.png"/> </a> ********************************* --> </div> <iframe class="illustrationFiche" id="iframe2{$counter}" onLoad=" var total = document.getElementById('total').innerHTML; var compteur = document.getElementById('compteur').innerHTML; var sens = document.getElementById('sens').innerHTML; if (sens == 'minus') &#x0007B; if (compteur &gt; 0) &#x0007B; var e = compteur - 1; &#x0007D; else &#x0007B; var e = total; &#x0007D; &#x0007D; else &#x0007B; if (compteur &lt; total - 1) &#x0007B; var e = (parseInt(compteur)+1); &#x0007D; else &#x0007B; var e = 0; &#x0007D; &#x0007D; ; document.getElementById('compteur').innerHTML = e; document.getElementById('temoin').innerHTML = e; var h = document.getElementsByClassName('indexNum')[e].innerHTML; var hh = document.getElementsByClassName('indexNum')[e + 1].innerHTML; document.getElementById('gal{$counter}').href = h ; document.getElementById('gal2{$counter}').href = hh;" onMouseOver="this.style.height='400px'; this.style.width='400px';" onMouseOut="this.style.height=''; this.style.width='';this.style.zIndex='0'" onMouseClick="this.style.zIndex='20000000';" name="panelImg{$counter}" frameborder="0" border="0" cellspacing="0" seamless="seamless" scrolling="no" src='{($http[$num]//text())}'/> </div> else () (:************Fin affiche lien**********:) , $contenu , if (db:open('messages')//entry[matches(./subject,$path,'i')][not(matches($path,'FORUM','i'))]) then <div id="note" class='postit yellow'> <a href="#" class="XClick" onClick="document.getElementById('note').style.display='none';">X</a> { for $mess in db:open('messages')//entry[matches(./subject,$path,'i')] return <p>{ data($mess/@from)} ({replace(data($mess/date),'T.*','')} à {replace(data($mess/date),'.*T(.....).*','$1')}): {html:parse(string($mess/message), map { 'nons': true() }) }</p> } </div> else (), if (db:open('site')/root/forum='on') then if ($isi:testidname=db:open('utilisateurs')//name) then <div id="commFiches"> <script src='/static/tinymce/tinymce.min.js'></script> <script> tinymce.init(&#x0007B; selector: '#areaForum', plugins: ["code", "preview save insertdatetime media table contextmenu paste imagetools", "advlist autolink lists link image charmap print preview anchor", "searchreplace visualblocks code fullscreen"], toolbar: "save undo redo preview | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image code", images_upload_base_path: '/static/images', automatic_uploads: true, width: 600, height: 300, content_css: [{ let $dirHard := concat( replace(file:base-dir(),'repo.*',''), "/static/CSS/", db:open('site')/root/css/text(),"/") for $x in file:list($dirHard)[matches(.,'.css')] return ("'/static/CSS/04/"||replace($x,'%20','')||"',") } 'static/CSS/04/system.css' ], extended_valid_elements: 'page, name[lang], div[lang], a[href|target=_blank],strong/b,div[align],br' &#x0007D; ); </script> <h2>Commenter la Fiche</h2> <form id="postForm" method="post" action="/saveMess"> <p> <textarea id="areaTitreForum" name="messTitre" placeHOlder="Your title" /> (:la page FORUM:) </p> <p> <textarea id="areaForum" name="messText" placeHOlder="Your comment..." /> </p> <input type="hidden" name="messBdd" value="{$isi:bdd}"/> <input type="hidden" name="messId" value="{$path}"/> <input type="hidden" name="messAuthor" value="{$isi:testidname}"/> </form> { for $x in db:open('forum')/bdd/entry[bddId=$path] return <div id="messageOnForum"> <ul class="tabUserAdmin"> <li>De: {data($x/from)}</li> <li>({replace(data($x/date),'T.*','')} à {replace(data($x/date),'.*T(.....).*','$1')})</li> <li id="titre">Titre: {data($x/titre)}</li> <li>{html:parse(string($x/text), map { 'nons': true() })}</li> { for $answer in $x//answer return <div id="forumAnswer"> <ul class="tabUserAdmin"> <li>De: {data($answer/auteur)}</li> <li>({replace(data($answer/date),'T.*','')} à {replace(data($answer/date),'.*T(.....).*','$1')})</li> <li>{html:parse(string($answer/mess), map { 'nons': true() })}</li> </ul> </div> , if ($isi:testid3 or $isi:testid4 or $isi:testidname=db:open($isi:bdd)/*/fiche[id=$path]/auteur) then <a class="button" href="/forumEffacer-{data($x/@id)}">Effacer</a> else () , if ($isi:testid2 or $isi:testid3 or $isi:testid4) then ( <a class="button" onClick="document.getElementById('answer{data($x/@id)}').style.display='block'">Répondre</a> , <form id="answer{data($x/@id)}" style="display:none;" method="post" action="/forumAnswer-{data($x/@id)}"> <textarea name="forumanswer" id="areaForum">coucou</textarea> <input type="hidden" name="auteur" value="{$isi:testidname}"/> <input type="hidden" name="orig" value="{$path}"/> <p><input class="button" type="submit" value="OK"/></p> </form> ) else ()} </ul> </div> } </div> else <p id="commFiches"> <h2>Commenter la Fiche</h2> <a class="button" href="/login">Connect for forum</a> { for $x in db:open('forum')/bdd/entry[bddId=$path] return <div id="messageOnForum"> <ul class="tabUserAdmin"> <li>De: {data($x/from)}</li> <li>({replace(data($x/date),'T.*','')} à {replace(data($x/date),'.*T(.....).*','$1')})</li> <li>Titre: {data($x/titre)}</li> <li>{html:parse(string($x/text), map { 'nons': true() })}</li> { for $answer in $x//answer return <div id="forumAnswer"> <ul class="tabUserAdmin"> <li>De: {data($answer/auteur)}</li> <li>({replace(data($answer/date),'T.*','')} à {replace(data($answer/date),'.*T(.....).*','$1')})</li> <li>{html:parse(string($answer/mess), map { 'nons': true() })}</li> </ul> </div> } </ul> </div> } </p> else () ) ) else isi:template(isi:t('page_not_found')) }; declare %rest:path('/forum') %output:method("html") %output:omit-xml-declaration("no") function isilex:forum() { let $contenu :=( ) return isi:template($contenu) }; declare %rest:path('/forum/{$id}') %output:method("html") %output:omit-xml-declaration("no") function isilex:forumid($id) { let $contenu :=( if ($isi:testidname=db:open('utilisateurs')//name) then <div id="commFiches"> <script src='/static/tinymce/tinymce.min.js'></script> <script> tinymce.init(&#x0007B; selector: '#areaForum', plugins: ["code", "preview save insertdatetime media table contextmenu paste imagetools", "advlist autolink lists link image charmap print preview anchor", "searchreplace visualblocks code fullscreen"], toolbar: "save undo redo preview | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image code", images_upload_base_path: '/static/images', automatic_uploads: true, width: 600, height: 300, content_css: [{ let $dirHard := concat( replace(file:base-dir(),'repo.*',''), "/static/CSS/", db:open('site')/root/css/text(),"/") for $x in file:list($dirHard)[matches(.,'.css')] return ("'/static/CSS/04/"||replace($x,'%20','')||"',") } 'static/CSS/04/system.css' ], extended_valid_elements: 'page, name[lang], div[lang], a[href|target=_blank],strong/b,div[align],br' &#x0007D; ); </script> <h2>Forum</h2> <form id="postForm" method="post" action="/saveMess"> <p> <textarea id="areaTitreForum" name="messTitre" placeHOlder="Your title..." /> </p> <p> <textarea id="areaForum" name="messText" placeHOlder="Your comment" /> </p> <input type="hidden" name="messBdd" value="{$isi:bdd}"/> <input type="hidden" name="messId" value="{$id}"/> <input type="hidden" name="messAuthor" value="{$isi:testidname}"/> </form> { for $x in db:open('forum')/bdd/entry[bddId=$id] return <div id="messageOnForum"> <ul class="tabUserAdmin"> <li>De: {data($x/from)}</li> <li>({replace(data($x/date),'T.*','')} à {replace(data($x/date),'.*T(.....).*','$1')})</li> <li id="titre">Titre: {data($x/titre)}</li> <li>{html:parse(string($x/text), map { 'nons': true() })}</li> { for $answer in $x//answer return <div id="forumAnswer"> <ul class="tabUserAdmin"> <li>De: {data($answer/auteur)}</li> <li>({replace(data($answer/date),'T.*','')} à {replace(data($answer/date),'.*T(.....).*','$1')})</li> <li>{html:parse(string($answer/mess), map { 'nons': true() })}</li> </ul> </div> , if ($isi:testid3 or $isi:testid4 or $isi:testidname=db:open($isi:bdd)/*/fiche[id=$id]/auteur) then <a class="button" href="/forumEffacer-{data($x/@id)}">Effacer</a> else () , if ($isi:testid2 or $isi:testid3 or $isi:testid4) then ( <a class="button" onClick="document.getElementById('answer{data($x/@id)}').style.display='block'">Répondre</a> , <form id="answer{data($x/@id)}" style="display:none;" method="post" action="/forumAnswer-{data($x/@id)}"> <textarea name="forumanswer" id="areaForum">coucou</textarea> <input type="hidden" name="auteur" value="{$isi:testidname}"/> <input type="hidden" name="orig" value="{$id}"/> <p><input class="button" type="submit" value="OK"/></p> </form> ) else ()} </ul> </div> } </div> else <p id="commFiches"> <h2>Commenter la Fiche</h2> <a class="button" href="/login">Connect for forum</a> { for $x in db:open('forum')/bdd/entry[bddId=$id] return <div id="messageOnForum"> <ul class="tabUserAdmin"> <li>De: {data($x/from)}</li> <li>({replace(data($x/date),'T.*','')} à {replace(data($x/date),'.*T(.....).*','$1')})</li> <li>Titre: {data($x/titre)}</li> <li>{html:parse(string($x/text), map { 'nons': true() })}</li> { for $answer in $x//answer return <div id="forumAnswer"> <ul class="tabUserAdmin"> <li>De: {data($answer/auteur)}</li> <li>({replace(data($answer/date),'T.*','')} à {replace(data($answer/date),'.*T(.....).*','$1')})</li> <li>{html:parse(string($answer/mess), map { 'nons': true() })}</li> </ul> </div> } </ul> </div> } </p> ) return isi:template($contenu) }; declare %updating %rest:header-param("Referer", "{$referer}", "none") %rest:path("/forumEffacer-{$baseId}") function isilex:forumEffacer($baseId, $referer){ ( db:output(<rest:redirect>{$referer}</rest:redirect>), for $x in db:open('forum')//entry[@id=$baseId] return delete node $x ) }; declare %updating %rest:path("/forumAnswer-{$baseId}") %rest:POST %rest:header-param("Referer", "{$referer}", "none") %rest:query-param('forumanswer','{$texte}','') %rest:query-param('auteur','{$auteur}','') %rest:query-param('orig','{$orig}','') function isilex:forumAnswer($baseId, $texte, $auteur, $orig, $referer){ ( db:output(<rest:redirect>{$referer}</rest:redirect>), for $x in db:open('forum')//entry[@id=$baseId] 	return insert node 		<answer> 			<date>{fn:current-dateTime()}</date> 			<auteur>{$auteur}</auteur> 			<mess>{$texte}</mess> 		</answer> 		into $x 		) }; declare %updating %rest:path("/saveMess") %rest:POST %rest:query-param('messText','{$messText}','') %rest:query-param('messBdd','{$messBdd}','') %rest:query-param('messId','{$messId}','') %rest:query-param('messAuthor','{$messAuthor}','') %rest:query-param('messTitre','{$messTitre}','') function isilex:saveMess($messText,$messId,$messBdd,$messAuthor,$messTitre){ ( db:output(<rest:redirect>/fiche/{$messId}</rest:redirect>), let $target := <entry id="{ if ((for $x in db:open('forum')//@id order by number($x) descending return number($x))[1]=1) then (for $x in db:open('forum')//@id order by number($x) descending return number($x))[1] + 1 else 1 }"> <bddName>{$messBdd}</bddName> <bddId>{$messId}</bddId> <from>{$messAuthor}</from> <date>{fn:current-dateTime()}</date> <titre>{$messTitre}</titre> <text>{html:parse(normalize-space($messText), map { 'nons': true() })}</text> </entry> return insert node $target into db:open('forum')/bdd) }; declare %rest:path("/error{$code}") %output:method("html") function isilex:error($code){ if ($isi:testLang = 'fr') then isi:template( <div id=""><h2 style="color:#ff8000; font-size: 5em;">{$code}</h2><p>Nous sommes désolés, une erreur a été rencontrée. </p><p><a class="button" href="/">Revenir</a></p></div> ) else isi:template( <div id=""><h2 style="color:#ff8000; font-size: 5em;">{$code}</h2><p>We are sorry, an error has been encountered. </p><p><a class="button" href="/">Get back ?</a></p></div> ) }; declare %updating %rest:path('/change-lang') %rest:header-param("Referer", "{$referer}", "none") %rest:POST %rest:query-param('lang','{$lang}','fr') %rest:query-param('back','{$back}','/') function isilex:change-lang($lang,$back,$referer){ try { if ($isi:testid) then try { if (db:open('utilisateurs')/*/entry[.//id=session:id()]/lang) then for $i in db:open('utilisateurs')//entry[.//id=session:id()]/lang return replace node $i with <lang>{$lang}</lang> else ( insert node <lang>{$lang}</lang> into db:open('utilisateurs')/*/entry[.//id=session:id()] ), db:output(<rest:redirect>{$referer}</rest:redirect>) } catch * { ( db:output(<rest:redirect>{$referer}</rest:redirect>) , let $content := 'Error [' || $err:code || ']: ' || $err:description return file:write(file:base-dir()||"/errorLangMin.txt", $content))} else ( if (db:open('visits')/root/visit[id=session:id()]) then for $i in db:open('visits')/root/visit[id=session:id()] return replace node $i with <visit><id>{session:id()}</id><timeStamp>{current-dateTime()}</timeStamp><lang>{$lang}</lang></visit> else insert node <visit><id>{session:id()}</id><timeStamp>{current-dateTime()}</timeStamp><lang>{$lang}</lang></visit> into db:open('visits')/root , db:output(<rest:redirect>{$referer}</rest:redirect>) ) } catch * { ( db:output(<rest:redirect>{$referer}</rest:redirect>) , let $content := 'Error [' || $err:code || ']: ' || $err:description return file:write(file:base-dir()||"/errorLang.txt", $content))} }; declare %rest:path("") function isilex:start() { if (db:open('utilisateurs')//masteradmin) then if (empty($isi:testLang)) then <rest:redirect>/change-lang</rest:redirect> else <rest:redirect>/accueil</rest:redirect> else( <rest:redirect>/masteradmin</rest:redirect> ) }; declare %rest:path("/accueil") function isilex:vers-accueil() { if (db:open('utilisateurs')//masteradmin) then <rest:redirect>/accueil/1</rest:redirect> else ( <rest:redirect>/masteradmin</rest:redirect> ) }; declare %rest:path("/accueil/{$ind}") %output:method("html") function isilex:startacc($ind) { <html onLoadf="var myIframe = document.getElementById('iframe');myIframe.contentWindow.scrollTo(200,ycoord);"> { isi:template(( if (db:open('site')/root/alphabet='on') then if ($isi:testid4 or $isi:testid3) then <p> <a class='' href="/page{if (db:open('site')/root/alphabet='on') then 'HTML' else ()}-{$isi:testLang}-{if ($isi:testLang='fr') then 'texteAccueil' else 'mainPageText'}"><img width='40px' class='zoom' src='/static/images/svg/writing.svg'/></a> <a href="/Images"><img class='zoom' src="/static/images/svg/violin.svg" width="40px"/></a> {(if (db:open('site')/root/facebook != '') then <a href="{db:open('site')/root/facebook}"><img width="25px;" src="/static/images/f.jpg"></img></a> else <a><img style="" width="20px;" src="/static/images/f.jpg"></img></a> , if (db:open('site')/root/twitter != '') then <a href="{db:open('site')/root/twitter}"><img style="margin-left:0px;" width="25px;" src="/static/images/ff.jpeg"></img></a> else () , if (db:open('site')/root/gplus != '') then <a href="{db:open('site')/root/gplus}"><img style="" width="24px;" src="/static/images/fff.png"></img></a> else () )} </p> else (if (db:open('site')/root/facebook != '') then <a href="{db:open('site')/root/facebook}"><img width="25px;" src="/static/images/f.jpg"></img></a> else <a><img style="" width="20px;" src="/static/images/f.jpg"></img></a> , if (db:open('site')/root/twitter != '') then <a href="{db:open('site')/root/twitter}"><img style="margin-left:0px;" width="25px;" src="/static/images/ff.jpeg"></img></a> else () , if (db:open('site')/root/gplus != '') then <a href="{db:open('site')/root/gplus}"><img style="" width="24px;" src="/static/images/fff.png"></img></a> else () ) else () , if (db:open('site')/root/alphabet='on') then if ($isi:testLang='fr') then db:open('pages')/root/page[name='texteAccueil']/div[@lang='fr'] else db:open('pages')/root/page[name='texteAccueil']/div[@lang='en'] (:Social network:) else let $indix := xs:integer($ind) for $indice in ($indix to $indix + 24) return ( for $i at $count in db:open($isi:bdd)/*/fiche/entry [not(.//orth='AJOUT')] order by xs:dateTime($i/../creationDate) descending return <div id="rezSocentry"> <div id="rezSocPartI"> <div id="rezSocDateTime"><div id="rezSocDT">Le {replace(data($i/../creationDate),'([^T]*)T.*','$1')} à {replace(data($i/../creationDate),'[^T]*T([^\.]*)...\..*','$1')} by {data($i/../auteur)} : </div> <div id="rezSocTitre"><a href="/fiche/{data($i//orth)}">{data($i//orth)}</a></div></div> </div> <div id="rezSocImg"> <a href="{ if (($i//ref, $i//mentioned, $i//def)[. contains text 'http://']) then (for $x at $counter in ($i//ref, $i//mentioned, $i//def)[. contains text 'http://'] let $http:= analyze-string(string($x),'http://[^ ]*')//fn:match return $http)[1] else '/fiche/'||data($i//orth)}"> <img class='zoom' width="25px" src=" { if (($i//ref, $i//mentioned, $i//def)[. contains text 'http://']) then (for $x at $counter in ($i//ref, $i//mentioned, $i//def)[. contains text 'http://'] let $http:= analyze-string(string($x),'http://[^ ]*')//fn:match return $http)[1] else '/static/images/svg/alarm-clock.svg' }"/></a> </div> <div id="rezSocDef">{string-join($i//def)}</div> { let $path := $i//orth return if (db:open('site')/root/forum='on') 		then 		if ($isi:testidname=db:open('utilisateurs')//name) 		 then <div id="rezSocCommFiches"> { if (db:open('forum')/bdd/entry[bddId=$path]) then ( if (db:open('forum')/bdd/entry[bddId=$path]) then ( <a id="rezSocShow-{$path}" style="display:none;" onClick="document.getElementById('rezSocmessageOnForum-{$path}').style.display='';document.getElementById('rezSocHide-{$path}').style.display='';document.getElementById('rezSocShow-{$path}').style.display='none';" class='rezSocButton' href="#messageOnForum-{$path}">Messages +</a>, <a id="rezSocHide-{$path}" onClick="document.getElementById('rezSocmessageOnForum-{$path}').style.display='none';document.getElementById('rezSocHide-{$path}').style.display='none';document.getElementById('rezSocShow-{$path}').style.display='';" class='rezSocButton' href="#messageOnForum-{$path}">Messages -</a>) else () , for $x in db:open('forum')/bdd/entry[bddId=$path] return <div id="rezSocmessageOnForum-{$path}"> <ul class="tabUserAdmin"> <li>De: {data($x/from)}</li> <li>({replace(data($x/date),'T.*','')} à {replace(data($x/date),'.*T(.....).*','$1')})</li> <li id="titre">Titre: {data($x/titre)}</li> <li>{html:parse(string($x/text), map { 'nons': true() })}</li> {if ($x//answer) then for $answer in $x//answer return <div id="forumAnswer"> <ul class="tabUserAdmin"> <li>De: {data($answer/auteur)}</li> <li>({replace(data($answer/date),'T.*','')} à {replace(data($answer/date),'.*T(.....).*','$1')})</li> <li>{html:parse(string($answer/mess), map { 'nons': true() })}</li> </ul> </div> else () } {if ($isi:testid3 or $isi:testid4 or $isi:testidname=db:open($isi:bdd)//(fiche/entry,entry)[upper-case(form/orth)=upper-case($path)][last()]/form/auteur) 		then <a class='rezSocButton' href="/forumEffacer-{data($x/@id)}">Effacer</a> else ()} {if ($isi:testid2 or $isi:testid3 or $isi:testid4) 		then (<a href="#" class='rezSocButton' onClick="document.getElementById('answer{data($x/@id)}').style.display='block'">Répondre</a> 		, 		<form id="answer{data($x/@id)}" style="display:none;" method="post" action="/forumAnswer-{data($x/@id)}"> 		<textarea name="forumanswer" id="areaForum" placeholder="message"></textarea> 		<input type="hidden" name="auteur" value="{$isi:testidname}"/> 		 <input type="hidden" name="orig" value="{$path}"/> 		<p><input class='rezSocButton' type="submit" value="OK"/></p> 		</form> 		) else ()} </ul> </div> ) else 	<p id="rezSoccommFiches"><a class='rezSocButton' href="/fiche/{$i//orth}">Forum</a></p>} </div> else <p id="rezSoccommFiches"> <a class='rezSocButton' href="/login">Connect</a> {if (db:open('forum')/bdd/entry[bddId=$path]) then ( <a id="rezSocShow-{$path}" style="display:none;" onClick="document.getElementById('messageOnForum-{$path}').style.display='';document.getElementById('rezSocHide-{$path}').style.display='';document.getElementById('rezSocShow-{$path}').style.display='none';" class='rezSocButton' href="#messageOnForum-{$path}">Messages +</a>, <a id="rezSocHide-{$path}" onClick="document.getElementById('messageOnForum-{$path}').style.display='none';document.getElementById('rezSocHide-{$path}').style.display='none';document.getElementById('rezSocShow-{$path}').style.display='';" class='rezSocButton' href="#messageOnForum-{$path}">Messages -</a>) else () } { for $x at $compteId in db:open('forum')/bdd/entry[bddId=$path] return <div id="messageOnForum-{$path}"> <ul class="tabUserAdmin"> <li>De: {data($x/from)}</li> <li>({replace(data($x/date),'T.*','')} à {replace(data($x/date),'.*T(.....).*','$1')})</li> <li>Titre: {data($x/titre)}</li> <li>{html:parse(string($x/text), map { 'nons': true() })}</li> {if ($x//answer) then for $answer in $x//answer return <div id="forumAnswer"> <ul class="tabUserAdmin"> <li>De: {data($answer/auteur)}</li> <li>({replace(data($answer/date),'T.*','')} à {replace(data($answer/date),'.*T(.....).*','$1')})</li> <li>{html:parse(string($answer/mess), map { 'nons': true() })}</li> </ul> </div> else () } </ul> </div> }</p> else () } </div>)[$indice] ) )/* 	} 	{ 	if (db:open('site')/root/alphabet='off') then 		(<div id="rezSocFooter"> 			<a href="/accueil/1"><img height="20px" src="/static/images/Preceding.png"/></a> 	 	<a href="/accueil/{$ind + 25}"><img height="20px" src="/static/images/Next.png"/></a> 	</div> 	, 	<div id="rezSocFooterbis"> 			<a href="/accueil/1"><img height="20px" src="/static/images/Preceding.png"/></a> 	 	<a href="/accueil/{$ind + 25}"><img height="20px" src="/static/images/Next.png"/></a> 	</div>) 	else 	() 	} </html> }; declare %output:method('html') %rest:path('/ODT') function isilex:rtr(){ isi:template( if ($isi:testLang='fr') then <div> <h2>ODT et PDF Export</h2> <p>Nous vous remercions de l &#x00027; intérêt que vous manifestez pour notre travail <a href="http://www.isilex.fr">Isilex</a>. Les fonctionnalités d'export d'XML vers ODT et PDF sont réservées aux usages professionnels et ne sont accessibles que dans la suite <a href="http://www.isilex.fr">Isilex</a> complète et pas dans IsilexLight.</p> </div> else <div> <h2>ODT and PDF Exportation</h2> <p>Thank you for using Isilex. XML to ODT or PDF export is allowed for Professional Use of <a href="http://www.isilex.fr">Isilex</a> and is not included in IsilexLight.</p> </div> ) }; declare %updating %rest:header-param("Referer", "{$referer}", "none") %rest:path('/wdvhgj{$id}') function isilex:xxff($id, $referer){ if ($isi:testid3 or $isi:testid4) then for $x in db:open($isi:bdd)//fiche[./id=$id] return delete node $x else (), for $x in db:open('forum')/bdd/entry[bddId=$id] return delete node $x, for $x in db:open('forum')/bdd/entry[bddId=db:open($isi:bdd)//entry[./id=$id]//orth] return delete node $x, db:output(<rest:redirect>/accueil</rest:redirect>) }; declare %rest:path('/valid/bdd') %output:method('html') function isilex:valid(){ if ($isi:testid3) then if ($isi:testLang='fr') then isi:template( <div> <h2>Administration des fiches</h2> Les fonctions d'administration sont dédiées à des usages professionnels d'Isilex.<br/> Les fiches actuellement saisies sont immédiatement accessibles en ligne.<br/> Pour en savoir, se rendre sur le site: <a href="http://www.isilex.fr">Isilex</a> </div> ) else isi:template( <div> <h2>XML management</h2> XML management is dedicated to a professional use of Isilex.<br/> XML files of your Isilex are immediately accessible on-Line.<br/> Learn more about Optimization: <a href="http://www.isilex.fr">Isilex</a> </div> ) else isi:template(isi:t('unauthorized_access')) }; declare %rest:path('/export') %output:method('html') function isilex:expp(){ if ($isi:testid3) then if ($isi:testLang='fr') then isi:template( <div> <h2>Exportation Pdf ou Odt</h2> Les fonctions d'exportation sont dédiées à des usages professionnels d'Isilex.<br/> Pour en savoir, se rendre sur le site: <a href="http://www.isilex.fr">Isilex</a> </div> ) else isi:template( <div> <h2>Export to Pdf, Odt</h2> Export will be soon available.<br/> Learn more about Optimized version: <a href="http://www.isilex.fr">Isilex</a> </div> ) else isi:template(isi:t('unauthorized_access')) }; declare %rest:path('/info') %rest:GET %rest:query-param('message','{$message}','') %output:omit-xml-declaration("no") %output:method('html') function isilex:logingg($message){ if (matches($message,'text_')) then isi:template( isi:t(substring($message,6)) ) else ( isi:template($message) ) }; declare %rest:path("/register") %rest:GET %rest:query-param('message','{$message}','') %output:method("html") %output:omit-xml-declaration("no") function isilex:register($message) { isi:template( ( <div> <div id="fondBlack" onClick="history.go(-1)"/> <div id="tablet"> <form method="post" action='registering'> <table> <tr><td> <img width="15px;" src="static/images/Preceding.png" style="cursor: pointer;" onClick="history.go(-1)"/></td><td/></tr> <tr><td>Inscription</td><td>{$message}</td></tr> <tr> <td>{isi:t('username')}</td> <td><input class="adminInput" type='text' name="user"></input></td> </tr> <tr> <td>Mail</td> <td><input class="adminInput" type='text' name='mail'></input></td> </tr> <tr> <td>{isi:t('password')}</td> <td><input class="adminInput" type='password' name='mdp'></input></td> </tr> <tr> <td> {isi:t('re_password')} </td> <td> <input class="adminInput" type='password' name='rmdp'></input> </td> </tr> <tr> <td/> <td> <input class="adminInput" type='submit' value="{isi:t('register')}"></input> </td> </tr> </table> </form> </div> </div>) ) }; declare %updating %rest:path('/registering') %output:method('html') %rest:POST %rest:form-param('user','{$user}','') %rest:form-param('mail','{$mail}','') %rest:form-param('mdp','{$mdp}','') %rest:form-param('rmdp','{$rmdp}','') function isilex:registering($user,$mdp,$rmdp,$mail){ if ($isi:testid) then db:output(<rest:redirect>/user/{$isi:name}</rest:redirect>) else if ($user != '' and $user !=db:open('utilisateurs')/utilisateurs/entry/name) then if ($mail='' or not(matches($mail,'^.+@.+\..+')) or $mail = db:open('utilisateurs')/utilisateurs/entry/mail) then db:output(<rest:redirect>/register?message={web:encode-url(isi:t('invalid_mail'))}</rest:redirect>) else if ($mdp = '' or $mdp!=$rmdp) then db:output(<rest:redirect>/register?message=Mot de passe vide ou non semblable</rest:redirect>) else if ($mdp=$rmdp and $mdp != '') then (insert node <entry> <name>{$user}</name> <mail>{$mail}</mail> <usertype>user</usertype> <password>{crypto:hmac($mdp,'isilex','sha512','base64')}</password> <sessions> <session><timeStamp>{current-dateTime()}</timeStamp> <id>{session:id()}</id></session></sessions> <lang>fr</lang> <masterGroup> <name></name> </masterGroup> </entry> into db:open('utilisateurs')/utilisateurs,db:output(<rest:redirect>/user/{$user}</rest:redirect>)) else db:output( <rest:redirect>/register?message={web:encode-url(isi:t('invalid_password'))}</rest:redirect>) else (db:output( <rest:redirect>/register?message={web:encode-url(isi:t('invalid_username'))}</rest:redirect> ) ) }; declare %rest:path('/login') %rest:GET %rest:query-param('message','{$message}','') %output:method('html') function isilex:login($message){ let $log := ( <div> <div id="fondBlack"/> {if ($isi:testid) then (<p>If you want to try Admin connexion and try Web Pages Editing, XML Editing or Pages administration and CSS changes,</p>,<p> Please Contact us at: isilex@isilex.fr</p>) else <div id="tablet"> <form method='post' action='logging'> <table> <tr><td><img width="15px;" src="static/images/Preceding.png" style="cursor: pointer;" onClick="history.go(-1)"/></td><td>{$message}</td></tr> <tr> <td>Login</td><td><input class="adminInput" type='text' name="user" placeholder="login"></input></td> </tr> <tr> <td>{isi:t('password')}</td> <td><input class="adminInput" type='password' name="pass" placeholder="password"></input></td> </tr> <tr><td><a href='/register'>{isi:t('register')}</a></td> <td><input type='submit' Value="{isi:t('connection')}"></input></td> </tr> </table> </form> </div>} </div>) return isi:template($log) }; declare %updating %rest:path("/logging") %output:method('html') %rest:POST %rest:form-param("user","{$user}","") %rest:form-param("pass","{$pass}","") function isilex:logging($user,$pass){ if ($user= db:open('utilisateurs')/utilisateurs/entry/name and db:open('utilisateurs')/utilisateurs/entry[name=$user]/password=crypto:hmac($pass,'isilex','sha512','base64')) then ( insert node <session><id>{session:id()}</id><timeStamp>{current-dateTime()}</timeStamp></session> into db:open('utilisateurs')/utilisateurs/entry[name=$user]/sessions, for $i in db:open('utilisateurs')//id[.!=sessions:ids()] return delete node $i, for $i in db:open('visits')//id[.!=sessions:ids()] return delete node $i, db:output(<restxq:redirect>/</restxq:redirect>)) else db:output(<restxq:redirect>/login?message=Failed!</restxq:redirect>) }; declare %updating %rest:path('/logout') function isilex:logout(){ delete node db:open('utilisateurs')//entry[//id=session:id()]//id, for $i in db:open('utilisateurs')//id[.!=sessions:ids()] return delete node $i, for $i in db:open('visits')//id[.!=sessions:ids()] return delete node $i , db:output(<rest:redirect>/</rest:redirect>) }; declare %rest:path('/pageHTML-{$lg=.*}-{$idPage=.*}') %rest:header-param("Referer", "{$referer}", "none") %output:method('html') function isilex:modpaTiny($lg, $idPage, $referer) { if ($isi:testid2) then isi:template( <div> <script src='/static/tinymce/tinymce.min.js'></script> 	<script> 		tinymce.init(&#x0007B; 		selector: '#txtdef', plugins: ["code", "jbimages preview save insertdatetime media table contextmenu paste imagetools", "advlist autolink lists link image charmap print preview anchor", "searchreplace visualblocks code fullscreen"], toolbar: " link image code | save undo redo preview | styleselect | bold italic | alignleft aligncenter alignright alignjustify", images_upload_url: 'http://www.isilex.fr/postAcceptor.php', images_upload_base_path: '/static/images', relative_urls : false, automatic_uploads: true, width: 700, height: 300, 	content_css: [ 	{ 	let $dirHard := concat(replace(file:base-dir(),'repo.*',''),"/static/CSS/",db:open('site')/root/css/text(),"/") for $x in file:list($dirHard)[matches(.,'.css')] return ("'/static/CSS/04/"||$x||"',") } 		"/static/CSS/04/classes.css" 		 ], 	 extended_valid_elements: 'page, name[lang], div[lang], a[href|target=_blank],strong/b,div[align],br' 	&#x0007D; ); </script> {$isi:Css} <body> {$isi:ruler} <div id="global" class="protect"> <form id="pageTiny" method="post" action="/savePageHTML-{$lg}-{$idPage}"> <ul class="tabUserAdmin"> <li><label>Titre ({$lg}): </label> <input class="adminInput" name='titre' type='text' placeHolder="Insert title" value="{for $x in db:open('pages')//page[name=$idPage]//name[@lang=$lg] return ($x)}"/></li> <li><textarea name="node" id="txtdef" class="inputAdmin">{ if (db:open('pages')//page[name=$idPage]) then for $x in db:open('pages')//page[name=$idPage]//div[@lang=$lg] return $x else 	db:open('site')/root/model[page/name='Nom']/page/div[@lang=$isi:testLang] }</textarea></li> </ul> </form> </div> </body> </div>) else isi:template(isi:t('unauthorized_access')) }; declare %updating %rest:path('/savePageHTML-{$lg=.*}-{$idPage=.*}') %output:method('html') %rest:POST %rest:query-param('titre','{$titre}','') %rest:query-param('node','{$node}','') function isilex:modpaTn($lg,$idPage,$node,$titre) { try { db:output(<rest:redirect>pageHTML-{$lg}-{$idPage}</rest:redirect>), 		if($isi:testid2) 		 then 			if (db:open('pages')//page[name=$idPage]) 		 		then 		 			(replace node db:open('pages')//page[name=$idPage]/div[@lang=$lg] with 		 				<div class='texteLong' lang="{$lg}">{html:parse(normalize-space($node), map { 'nons': true() })/html/body}</div> 		 				, 		 			replace	value of node db:open('pages')//page[name=$idPage]/name[@lang=$lg] with 		 			 data($titre) 		 			) 		 		else 		 		 let $pageNew := 		 		 <page> 				<name lang="fr">{$titre}</name> 					<name lang="en">{$titre}</name> 				<div class='texteLong' lang="{$lg}">{$node}</div> 				<div class='texteLong' lang="{if ($lg='fr') then 'en' else 'fr'}">(empty)</div> 				</page> 				return insert node $pageNew into db:open('pages')/root 		 		 		 else db:output(isi:template(isi:t('unauthorized_access'))) 		 } catch * { fn:error(xs:QName('err:save'), $node) } }; declare %rest:path('/page-{$lg=.*}-{$idPage=.*}') %output:method('html') function isilex:modpa($lg, $idPage) { <html> <head> <link rel="stylesheet" href="/static/uikit-2/css/uikit.min.css" /> <script src="/static/jquery/jquery.js"></script> <script src="/static/uikit-2/js/uikit.min.js"></script> <script src="/static/uikit-2/js/marked.js"></script> {db:open('scripts')//entry[./@id="headerIsiPhp"]/header} 	<script src="/static/codemirror/mode/htmlmixed/htmlmixed.js"></script> 	<script src="/static/codemirror/mode/css/css.js"></script> 	<style>#txtdef a &#x0007B;color:red;&#x0007D;</style> 	<link rel="stylesheet" href="/static/uikit-2/css/components/htmleditor.css"/> <script src="/static/uikit-2/js/components/htmleditor.js"></script> {$isi:Css} </head> <body onLoad="getInnerHtml();"> {$isi:ruler} <div id="global" class="protect"> <div id="xml" style="width: 90%;"> <form id="pageSave" method="post" action="/savePage-{$lg}-{$idPage}"> <textarea data-uk-htmleditor="&#x0007B;mode:'split'&#x0007D;" name="node" id="txtdef" class="inputAdmin">{ if (db:open('site')//texts/text[@lang=$lg][../name=$idPage]) then for $x in db:open('site')//texts/text[@lang=$lg][../name=$idPage] return $x else if (db:open('pages')//page[name=$idPage]) then for $x in db:open('pages')//page[name=$idPage] return $x else db:open('site')/root/model[page/name='Nom']/* }</textarea> </form> </div> <a class="button" href="#" onclick='{if (db:open("utilisateurs")/utilisateurs/entry[not(usertype="user")]/sessions/session/id=session:id()) then string("document.getElementById('pageSave').submit();") else ()}'>Save</a> </div> <!--db:open('scripts')//entry[./@id="codeMirrorStartLeger"]/script}--> </body> </html> }; declare %updating %rest:path('/savePage-{$lg=.*}-{$idPage=.*}') %rest:POST %rest:query-param('node','{$node}','') function isilex:modpa($lg, $idPage,$node) { try { db:output(<rest:redirect>/</rest:redirect>), 		if($isi:testid2) 		 then 		 	if (db:open('site')//texts[name=$idPage]/text[@lang=$lg]) 		 		then 		 			for $x in db:open('site')//texts[name=$idPage]/text[@lang=$lg] 		 			return replace node $x with html:parse($node, map { 'nons': true() }) 		 			 		 		else if (db:open('pages')//page[name=$idPage]) 		 		 		 		then 		 			replace node db:open('pages')//page[name=$idPage] with 		 				html:parse(normalize-space($node), map { 'nons': true() }) 		 		else if (not(fetch:xml(normalize-space($node), map{'chop': true()})//name = ('','Titre de la page','Page title','Nom','Name'))) 		 		then 		 			insert node html:parse(normalize-space($node), map{'nons': true()}) into db:open('pages')/root 		 		else db:output(<rest:redirect>/err:save</rest:redirect>) else db:output(isi:template(isi:t('unauthorized_access'))) 		 } catch * { fn:error(xs:QName('err:save'), $node) } }; declare %rest:path('/modif-{$fiche=.+}') %rest:header-param("Referer", "{$referer}", "none") %rest:GET %rest:query-param("message","{$message}","") %output:method('html') function isilex:modiftyty($fiche,$referer,$message){ if ($isi:testid2) then if (($isi:systemV='on' and db:open($isi:bdd)/*/fiche[id=$fiche]/valid != 'ask') or $isi:systemV='off') then <html> <head> <title>{$isi:titre-name}</title> {db:open('scripts')//entry[./@id="headerIsiPhp"]/header} <script>$(document).ready({ if ($message = "") then () else "function()&#x0007B;alert('Votre fiche a bien été sauvée')&#x003B;&#x0007D;" })</script> {$isi:Css} </head> <body onLoad='getInnerHtml();' style='background-color:white;'> {$isi:ruler} <div id='renvoidtd'> <a class='clickx' href="#" onclick=" document.getElementById('renvoidtd').style.display = 'none'; document.getElementById('clickX').style.display = 'block'; ">X</a> Renvoi XSD: { isi:validXMLById($fiche) } { if (matches($referer,'modif-'||$fiche)) then ' Travail enregistré !' else '' } </div> <div id="panelImgBottom"> <div id="upPanImg" class="panLabelBottom" style="display:none;" onClick="document.getElementById('panelImgBottom').style.bottom = ''; document.getElementById('downPanImg').style.display = ''; "> Img Up </div> <div id="downPanImg" class="panLabelBottom" onClick="document.getElementById('panelImgBottom').style.bottom = '-65px'; document.getElementById('upPanImg').style.display = 'block'; document.getElementById('downPanImg').style.display = 'none'; "> XXX </div> { let $contenu := for $x in db:open($isi:bdd)/*/fiche[id=$fiche]/entry return $x return if ( $contenu//note ) then for $x in ($contenu//@src, $contenu//@href) let $http:= analyze-string(string($x),'http://[^ ]*')//fn:match for $h in $http return <a href='{($h//text())}' target="viewerMod" onClick="document.getElementById('viewerMod').height='200px'" onMouseOut="document.getElementById('viewerMod').height='0px'"> <img src="/static/images/fold.jpeg" height="80px"/> </a> else () } <iframe id="viewerMod" frameborder="0" border="0" cellspacing="0" seamless="seamless" scrolling="no" height="1px" /> </div> <div id="global" class="protect" > <div id="content">{ for $x in db:open($isi:bdd)/*/fiche[id=$fiche]/entry return $x }</div> <div id="xml"> <textarea id="txtdef" name="txtDef" width="250px" height="40px;" > { for $x in db:open($isi:bdd)/*/fiche[id=$fiche]/entry return $x } </textarea> </div> { if ($fiche != "xsd") then <div id="controle"></div> else <a style="display:block; clear:both;" href="javascript:history.back()"> <img id="mesBoutons" src="/static/images/vers-avant-icone-3791-64.png" width="40px" /> </a> } </div> <div id="paddleXml"> <!-- onsubmit="window.open('', 'formpopup', 'width=900,height=400,resizeable = false,scrollbars');target_popup(this);" --> <form id="valid" name="valid" method="POST" target="formpopup" action="/saveFiche"> <input type="hidden" id="inputFiche" name="inputFiche" value=""/> <input type="hidden" id="idFiche" name="idFiche" value="{$fiche}"/> <input type="hidden" id="validFiche" name="validFiche" value="false"/> </form> <div id="menuEdit"> <p id="indice" class="help">Info</p> <a id='clickX' style="position: absolute; margin-top:-30px; margin-left: -10px; margin-bottom: 20px; display:none;" class="clickxon" href="#" onclick=" document.getElementById('renvoidtd').style.display = 'block'; document.getElementById('menuEdit').style.marginTop = '0px'; document.getElementById('clickX').style.display = 'none'; document.getElementById('XClick').style.display = 'block'; "> &#8595; </a> { if (($isi:systemV='on')) then (db:open('scripts')//entry[./@id="boutonMenu"])/div else (db:open('scripts')//entry[./@id="boutonMenuMasterAdmminValidOff"])/div , db:open('scripts')//entry[./@id="boutonInsertion"]/div } <div id="boutonsBas" class='sample'> <input type='button' onClick='location.href="/modifCh/{$fiche}"' value="Modifier en Masque" onMouseOver="document.getElementById('indice').innerHTML='Accéder au masque de saisie'" /> <input type='button' onClick='location.href="/ftMark-{$fiche}"' value="ftMark: {(db:open($isi:bdd)//fiche[./id=$fiche]/entry//orth)[1]}.*" onMouseOver="document.getElementById('indice').innerHTML='Identifier le mot dans la fiche'"/> </div> { if (db:open('messages')//entry[matches(./subject,$fiche,'i')]) then let $ort := data(for $x in db:open($isi:bdd)/*/fiche[id=$fiche]/entry return $x/orth) return <div>{ for $mess in db:open('messages')//entry[matches(./subject,$ort,'i')] return <p>{ data($mess/@from)} : {data($mess/message)}, le {data($mess/date) }</p> }</div> else () } </div> {db:open('scripts')//entry[./@id="codeMirrorStart"]/script} </div> </body> </html> (:la fiche est 'ask for validation' et le site est sur 'masterValidAdmin' On:) else isi:template( <div><h2>Page de redirection</h2> <p>Vous arrivez sur cette page parce qu'il semblerait que votre site utilise la Validation des données par le Master Admin et que vous avez demandé une fiche qui est en attente de validation. Il faut attendre la validation pour poursuivre le travail. <a href="/accueil">Revenir</a></p> </div> ) else isi:template(isi:t('unauthorized_access')) }; declare %rest:path('/newFicheXml') %output:method("html") %output:omit-xml-declaration("no") function isilex:newFicheXml() as element(html) { if ($isi:testid2) then <html> <head> <title>{$isi:titre-name}</title> {db:open('scripts')//entry[./@id="headerIsiPhp"]/header} {$isi:Css} </head> <body onLoad="getInnerHtml();" style='background-color:white;'> {$isi:ruler} <div id="panelImgBottom"> <div id="upPanImg" class="panLabelBottom" style="display:none;" 	 onClick="document.getElementById('panelImgBottom').style.bottom = ''; 	 		 document.getElementById('downPanImg').style.display = ''; 	 ">Img Up</div> <div id="downPanImg" class="panLabelBottom" 		onClick="document.getElementById('panelImgBottom').style.bottom = '-65px'; 				 document.getElementById('upPanImg').style.display = 'block'; 				 document.getElementById('downPanImg').style.display = 'none'; "> 		X</div> { let $contenu := for $x in db:open("tei_fiche_exemple")/root/entry return $x return if ($contenu//ref contains text 'http://' or $contenu//mentioned contains text 'http://' ) 	then 	 for $x in ($contenu//ref, $contenu//mentioned) 		let $http:= analyze-string(string($x),'http://[^ ]*')//fn:match 		for $h in $http return 		<a href='{($h//text())}' 			target="viewerMod" 			onClick="document.getElementById('viewerMod').height='200px'" 			onMouseOut="document.getElementById('viewerMod').height='0px'"> 			<img src="/static/images/fold.jpeg" height="80px"/> 		</a> 	else ()} 	<iframe id="viewerMod" 			frameborder="0" 				border="0" 			cellspacing="0" 			seamless="seamless" 			scrolling="no" 			height="1px" /> 	</div> 	 	 <div id="global" class="protect"> <div id="content">{for $x in db:open("tei_fiche_exemple")/root/entry return $x}</div> <div id="xml"> <textarea id="txtdef" name="txtDef" width="250px" height="40px;"> { (for $x in db:open("tei_fiche_exemple")/root/entry return $x) } </textarea> </div> { <div> <div id="controle"> </div> </div> } </div> <div id="paddleXml"> <form id="valid" name="valid" method="POST" action="/saveNew"> <input type="hidden" id="inputFiche" name="inputFiche" value=""/> <input type="hidden" id="validFiche" name="validFiche" value="false"/> </form> <div id="menuEdit"> <p id="indice" class="help">Menu Validation:</p> <a id='clickX' style="position: absolute; margin-top:-30px; margin-left: -10px; margin-bottom: 20px; display:none;" class="clickxon" href="#" onclick=" document.getElementById('renvoidtd').style.display = 'block'; document.getElementById('menuEdit').style.marginTop = '0px'; document.getElementById('clickX').style.display = 'none'; document.getElementById('XClick').style.display = 'block'; ">&#8595;</a> {if (($isi:systemV='on')) then (db:open('scripts')//entry[./@id="boutonMenu"])/div else (db:open('scripts')//entry[./@id="boutonMenuMasterAdmminValidOff"])/div} {db:open('scripts')//entry[./@id="boutonInsertion"]/div} <div id="boutons" style="clear:both; padding-top: 15px;"> <input type='button' onClick='location.href="/modifCh-"' value="Modifier en Masque" onMouseOver="document.getElementById('indice').innerHTML='Accéder au masque de saisie'"/> <input type='button' onClick='location.href="/ftMark-"' value="ftMark: {data(for $x in db:open('tei_fiche_exemple')/root/entry return $x//orth)}.*" onMouseOver="document.getElementById('indice').innerHTML='Identifier le mot dans la fiche'"/> </div> </div> {db:open('scripts')//entry[./@id="codeMirrorStart"]/script} </div> </body> </html> else isi:template(isi:t('unauthorized_access'))} ; declare %rest:path('/page/{$path=.+}') %output:method("html") %output:omit-xml-declaration("no") function isilex:pagep($path) as element(html) { let $contenu := (db:open('pages'))/root/page[name=$path or id=$path]/div[@lang=$isi:testLang] return isi:template( 	( 				if ($isi:testid4 or $isi:testid3) then <a class='button' href="/page{if (db:open('site')/root/alphabet='on') then 'HTML' else ()}-{$isi:testLang}-{$path}"><img class='zoom' width='30px' src='/static/images/svg/writing.svg'/></a> else () , 		$contenu 		) ) }; declare %rest:path('/modifpage/{$path=.+}') %output:method("html") %output:omit-xml-declaration("no") function isilex:modif-page($path) as element(html) { if($isi:testid2) then let $contenu :=( if ($path='new')then <form method='post' action='/up-page' > <textarea name='contenu'></textarea> <input type='submit' value='{isi:t('send')}' /> </form> else(), for $i in db:open('site')/*/page[(name,id)=$path] return <form method='post' action='/up-page' enctype="multipart/form-data"> <textarea name='contenu' value='{$i/div/text()}'>{$i/div}</textarea> <input type='submit' value='{isi:t('send')}' /> </form> ) return isi:template($contenu) else isi:template(isi:t('unauthorized_access')) }; declare %updating %rest:POST %rest:query-param('contenu','{$contenu}','') %rest:path('up-page') function isilex:up-page($contenu){ if ($isi:testid2) then insert node <page><auteur>{db:open('utilisateurs')//entry[.//id=session:id()]/name/text()}</auteur><name></name><id></id><div>{$contenu}</div></page> into db:open('pages')/root else (), db:output(<rest:redirect>/{$contenu}</rest:redirect>) }; declare %rest:path('/problemeXML-{$id}') %output:method("html") %output:omit-xml-declaration("no") function isilex:XMLProblem($id) as element(html) { isi:template( <html> <h2>Problème de validation XML</h2> <p>Un problème est survenu dans votre saisie. Revenez en arrière pour sauvegarder votre fiche.</p> </html> ) }; declare %rest:path('xsdOk-{$id}') %output:method("html") %output:omit-xml-declaration("no") function isilex:xsdOk($id) as element(html) { isi:template( <html> <h2>La Fiche ne présente aucun problème et a été sauvée</h2> <p><a href="#" onClick="window.close()">Fermer la fenêtre</a></p> </html> ) }; declare %rest:path('xsdPb-{$id}-{$message}') %output:method("html") %output:omit-xml-declaration("no") function isilex:xsdPb($id, $message as xs:string) as element(html) { isi:template( <html> <h2>La Fiche présente un problème</h2> <p>{$message}</p> <p><a href="#" onClick="window.close()">Fermer la fenêtre</a></p> </html> ) }; declare %rest:path('/error400') %output:method("html") %output:omit-xml-declaration("no") function isilex:error400() as element(html) { isi:template( <div> <h2>Erreur 400</h2> <p>Un problème est survenu sur le système</p> <p>{"URL: " || request:attribute("javax.servlet.error.request_uri") || ", " || "Error message: " || request:attribute("javax.servlet.error.message")}</p> </div> ) }; declare %rest:path('/error404') %output:method("html") %output:omit-xml-declaration("no") function isilex:error404() as element(html) { isi:template( <div> <h2>Erreur 404</h2> <p>La page demandée n'existe pas sur le système. <a href="/accueil">Revenir</a></p> <p></p> </div> ) }; declare %updating %rest:path('/saveNew') %rest:POST %output:method("html") %rest:form-param('inputFiche','{$inputFiche}') %rest:form-param('validFiche','{$valid}','false') function isilex:saveNew($inputFiche,$valid){ if ($isi:testid2 and $inputFiche != '') then ( let $id := if (db:open($isi:bdd)//id) then max( for $int in db:open($isi:bdd)/root/fiche/id[matches(.,"^[0-9]+$")] return xs:integer($int) )+1 else 1 let $entry := try { fetch:xml( replace(replace($inputFiche,'gramgrp','gramGrp'),'<img\s?(.*?)>',"<img $1/>") , map { 'chop': true(), 'intparse': true() }) } catch * { <message>Non XMLisable{$err:description}</message> } let $validate := if (db:open('site')//dtd='on') then validate:xsd-info($entry, db:open('tei_fiche')) else () let $fiche := <fiche> <id>{$id}</id> <creationDate>{current-dateTime()}</creationDate> <auteur>{$isi:name}</auteur> <permission>none</permission> <valid>{$valid}</valid> {$entry} </fiche> return( if (empty($validate) and not(matches($entry,'Non XMLisable'))) then( insert node $fiche into db:open($isi:bdd)/*, db:output(<rest:redirect>/modif-{$id}?message=Votre%20fiche%20a%20bien%20%C3%A9t%C3%A9%20sauv%C3%A9e</rest:redirect>) ) else ( db:output("Erreur: COPIER VOTRE TRAVAIL : " || $entry || $inputFiche) ) ) ) else( db:output(isi:template(isi:t('unauthorized_access'))) ) }; declare %updating %rest:path('/saveFiche') %rest:POST %rest:form-param('inputFiche','{$inputFiche}') %rest:form-param('idFiche','{$id}','') %rest:form-param('bddId',"{$bddId}", 'bdd') %rest:form-param('validFiche','{$valid}','false') function isilex:saveFiche($inputFiche,$id,$valid,$bddId){ if ($isi:testid2) then let $entry := try{ fetch:xml( replace(replace(replace($inputFiche,'gramgrp','gramGrp'),'<img\s(.*?)>',"<img $1/>"),'&#xD;','') , map { 'chop': true(), 'intparse': true() }) } catch * { <node>{"Non XMLisable" || $err:description}</node> } let $fiche := <fiche> <valid>{if (db:open('site')/root/masterAdminValidation='on') then $valid else 'false'}</valid> { (:C'est ici qu'on gère la sauvegarde des demaindes de validation:) db:open($isi:bdd)/*/fiche[id=$id]/*[not(name()=('entry','valid'))] } <modification> <modificationDate>{current-dateTime()}</modificationDate> <modifiedBy>{$isi:name}</modifiedBy> <lastVersion>{db:open($isi:bdd)/*/fiche[id=$id]/entry}</lastVersion> </modification> { $entry } </fiche> let $validate := if (db:open('site')//dtd= 'on') then ( validate:xsd-info($entry, db:open('tei_fiche')) ) else () return( if ( empty($validate) and $id !='' and $inputFiche !='' and ( $isi:name=$fiche/auteur or $isi:testid4 or ($isi:testid2 and $fiche/permission=('members','anyone')) ) and not(matches($entry,'Non XMLisable')) ) then ( replace node db:open($isi:bdd)/*/fiche[id=$id] with $fiche, db:output(<rest:redirect>/modif-{$id}?message=Votre%20fiche%20a%20bien%20%C3%A9t%C3%A9%20sauv%C3%A9e</rest:redirect>) (:/modif-{$id}?message=Votre%20fiche%20a%20bien%20%C3%A9t%C3%A9%20sauv%C3%A9e db:output(<rest:redirect>/xsdOk-{$id[1]}</rest:redirect>) :) ) else ( (: db:output(<rest:redirect>/xsdPb-{$id[1]}-{string($validate[1])}</rest:redirect>) :) db:output(isi:template(($entry,$inputFiche))) ) ) else( db:output(isi:template(isi:t('unauthorized_access'))) ) }; declare %output:method('html') %rest:POST %rest:form-param("inputFiche","{$fiche}","") %rest:form-param("xsd","{$xsd}","") %rest:path('/validate-xsd') function isilex:validateFicheXsdReturnResponse($fiche,$xsd){ if ($isi:testid2) then let $schema := if (not(empty($xsd)) and $xsd!='' and db:exists($xsd)) then db:open($xsd) else db:open('tei_fiche') let $entry := try { fetch:xml( replace(normalize-space($fiche),"gramgrp","gramGrp"), map{"chop":"true"} ) } catch * { "Non XMLisable" } let $ereurs := try { fetch:xml( replace(normalize-space($fiche),"gramgrp","gramGrp"), map{"chop":"true"} ) } catch * { $err:description } let $valid := try { if (db:open('site')//dtd='on') then validate:xsd-info($entry,$schema) else () } catch * { "Non XMLisable" } return if (not(empty($fiche)) and $fiche != '' and not($entry='Non XMLisable')) then ( if (empty($valid) and not($entry='Non XMLisable')) then ("IsilexOk") else ("ATTENTION Votre fiche n'a pas été sauvée " || $valid, $ereurs ) ) else ("ATTENTION Votre fiche n'a pas été sauvée " || $valid, $ereurs ) else ("Non autorisé") }; declare %updating %rest:path('/ftMark-{$id}') function isilex:ftMark($id) { if (isi:validateXML((db:open($isi:bdd)//fiche[./id=$id]/entry)[1])='Le document est conforme') then (db:output(<rest:redirect>/modif-{data($id)}</rest:redirect>), if (not(db:open($isi:bdd)//entry[../id=$id]//mark)) then let $f := for $x in db:open($isi:bdd)//entry[../id=$id] return $x let $a := distinct-values(for $x in $f/descendant::* return data(node-name($x))) return for $x in $f//*[node-name(.)=$a] [not(string(node-name(.))='orth')][not(string(node-name(.))='gloss')] [./text() contains text {data(db:open($isi:bdd)//entry[../id=$id]//orth)} using case insensitive using stemming using fuzzy] return replace node $x with ft:mark($x[text() contains text {data(db:open($isi:bdd)//entry[../id=$id]//orth)} using case insensitive using stemming using fuzzy]) else () ) else (db:output(<rest:redirect>/validShow</rest:redirect>) , insert node <entry> <id>{$id}</id> <time>{current-dateTime()}</time> <message> {isi:validateXML((db:open($isi:bdd)//entry[../id=$id][1]))} </message></entry> as first into db:open('errors')/bdd ) }; declare %rest:path('/validShow') %output:method('html') function isilex:validShow(){ (for $x in db:open('errors')//entry[1] return <div> <p>{data($x/time)}</p> <p>{$x/message}</p> </div>) }; declare %updating %rest:path("/delImage/{$name}") function isilex:delImg($name) { db:output(<rest:redirect>/Images</rest:redirect>), ( for $x in db:open('images')/root/file[@new_name=$name] let $path := string(data($x/@path)) return ( delete node $x, file:delete($path || $name) ) ) }; declare %updating %rest:POST %rest:path("/upload") %rest:form-param("files", "{$files}") function isilex:upload($files) { db:output(<rest:redirect>/Images</rest:redirect>), for $name in map:keys($files) let $content := $files($name) let $newName := replace(string(current-dateTime()),'([^:]*):([0-9]{2}):([0-9]{2}).*','$1-$2-$3') || '.' || string(replace($name,'[^\.]*\.(.*)','$1')) let $path := string(file:base-dir()) ||'/static/images/upload/' return ( insert node <file orig_name="{ $name }" new_name="{$newName}" path="{ $path }"/> as first into db:open('images')/root, file:write-binary(concat($path,$newName), $content) ) }; declare %rest:path('/Images') %output:method('html') function isilex:Img(){ isi:template( <div> <h2>Images</h2> <p><a href="/uploadImages">Upload Images</a></p> 		{ 		for $x in db:open('images')/root/file return 			<div id="descImg"> 			<table> 				<tr > 				 <td width="100px">{data($x//@orig_name)}</td> 				 <td width="200px"><img width="150px" height="80px" src="{'/static/images/upload/'||data($x/@new_name)}"/></td> 				 <td width="100px"><a target="_blank" href="{replace(string($isi:domaine || '/static/images/upload/'||data($x/@new_name)),' ','')}">{replace(string($isi:domaine || '/static/images/upload/'||data($x/@new_name)),' ','')}</a></td> 				 <td><a href="/delImage/{data($x/@new_name)}" class="button">Del</a></td> 				</tr> 			</table> 			</div> 		} </div> ) }; declare %rest:path('/uploadImages') %output:method('html') function isilex:uploadImg(){ isi:template( (<h2>Upload Images</h2> , 	<form action="/upload" method="POST" enctype="multipart/form-data"> 		<input type="file" name="files" multiple="multiple"/> 		<input type="submit"/> 	</form>) ) }; declare %rest:path("/user/{$path=.+}") %output:method("html") function isilex:user-page($path){ if (session:id() = db:open('utilisateurs')/utilisateurs/entry[name=$path]/sessions/session/id) then let $contenu :=( <h2>Vos fiches</h2>, <l>{for $i in db:open($isi:bdd)/*/fiche[auteur=$isi:name] return <li class="maListeDeFiches"><a href='/fiche/{$i/id}'>{if(upper-case($i/entry/form/orth[1])) then (upper-case($i/entry/form/orth[1])) else '!Pas de vedette'}</a></li>}</l> ) return isi:template($contenu) else isi:template(isi:t('unauthorized_access')) }; (:CORPUS:) declare %rest:path('/listeCorpus') %output:method('xhtml') function isilex:listyCorpus(){ isi:template( <div> <h2>Corpus list</h2> <ul> {for $x in db:list-details()[matches(.,'corpus')] return <li><a href="/displayC[{replace($x,'bdd_corpus_','')}][10]">{$x}</a></li>} </ul> </div> ) }; declare %rest:path('/displayC[{$titreCorpus}][{$index}]') %output:method('html') function isilex:displayCorpus($titreCorpus, $index){ isi:template( <div> <h2>Display Corpus {$titreCorpus}</h2> <p> <form method='POST' action='idefx[{$titreCorpus}]'> <ul id='concordancier'> <li class='concorde'><label>Concordance de motif ou Co-occurrences:</label></li> <li class='concorde'><input id="req" name='req' type='text' width='120px' placeholder='ex:directeur établissement'/></li> <li class='concorde'><input type='submit'/></li> <li class='concorde'><p><input type='checkbox' name='fuzzy' value='on'/>Levensthein</p></li> </ul> </form> </p> <p style="float:left; width: 100%;"> <li style='list-style:none; float: left; width: 50px;'><a href='/displayC[{$titreCorpus}][{xs:integer($index) - 10}]'><img src='http://www.isilex.fr/static/images/Preceding.png' width='20px'/></a></li> <li style='list-style:none; float: left; width: 50px;'><a href='/displayC[{$titreCorpus}][{xs:integer($index) + 10}]'><img src='http://www.isilex.fr/static/images/Next.png' width='20px'/></a></li> </p> { let $db := 'bdd_corpus_' || $titreCorpus let $nbCorpus := distinct-values(db:open($db)//@id) let $atom:= distinct-values(for $x in db:open($db)//p/@n return $x) let $display := if ($index='') then 10 else xs:integer($index) for $c in $nbCorpus return <div id='displayC' style='float:left; width: {round-half-to-even(80 div count($nbCorpus))}%; margin-left: 8px; padding: 5px; border-left: 1px solid black;'> { for $n in $atom[xs:integer(.) ge ($display - 10)][xs:integer(.) le $display] return for $x in db:open($db)//p[@id=$c][@n=$n] return $x } </div> } </div> ) }; declare %rest:path('/uploadTextes') %output:method('html') function isilex:uploadCorp(){ isi:template( (<h2>Upload Corpus</h2> , 	<form action="/uploadTextesSave" method="POST" enctype="multipart/form-data"> 		<p><label>Titre Corpus:</label> 		<input type='text' name='titreCorpus'/></p> 		<p><input type="file" name="files" multiple="multiple"/></p> 		<p><label>Tokenization par lignes ?</label> 		<input type="checkbox" name="ligneOnOff" value="1"/></p> 		<input type="submit"/> 	</form>) ) }; declare %updating %rest:POST %rest:path("/uploadTextesSave") %rest:form-param("files", "{$files}") %rest:form-param("ligneOnOff", "{$ligneOnOff}") %rest:form-param("titreCorpus", "{$titreCorpus}") function isilex:uploadCorp($files,$titreCorpus, $ligneOnOff) { db:output(<rest:redirect>/createDbCorp-{$titreCorpus}-{if (not($ligneOnOff='1')) then 0 else 1}</rest:redirect>), for $name in map:keys($files) let $content := $files($name) let $newName := replace(string(current-dateTime()),'([^:]*):([0-9]{2}):([0-9]{2}).*','$1-$2-$3') || '.' || string(replace($name,'[^\.]*\.(.*)','$1')) let $path := string(file:base-dir()) ||'/static/Corpus/' || $titreCorpus || '/txt/' return ( insert node <file titreCorpus="{ $titreCorpus }" orig_name="{ $name }" new_name="{$newName}" path="{ $path }"/> as first into db:open('bdd_corp')/root, if (not(file:exists($path))) then file:create-dir($path) else (), file:write-binary(concat($path,$newName), $content) ) }; declare %updating %rest:path('/createDbCorp-{$titreCorpus}-{$ligneOnOff}') function isilex:createDbCorp($titreCorpus,$ligneOnOff) { ( db:output(<rest:redirect>/insertDbCorp-{$titreCorpus}-{$ligneOnOff}</rest:redirect>), db:create('bdd_corpus_' || $titreCorpus, <bdd/>,'doc.xml',map {'ftindex': true(),'language':'fr', 'stemming': true()}) ) }; declare %updating %rest:path('/insertDbCorp-{$titreCorpus}-{$mode}') function isilex:insertDbCorp($titreCorpus, $mode) { ( db:output(<rest:redirect>/traiteCorpuXml-{$titreCorpus}-10</rest:redirect>), let $fileList := (for $x in db:open('bdd_corp')//file[./@titreCorpus=$titreCorpus] return <f name='{data($x/@new_name)}' place='{data($x/@path)}'>{data($x/@orig_name)}</f>) for $files at $countf in $fileList let $file := data($files/@place)||'/'|| data($files/@name) let $doc := if ($mode='1') then file:read-text-lines($file)[not(.='')] else for $l in tokenize(file:read-text($file),'\n\n')[not(.='')] return isi:tokenize-sentences($l) return for $l at $count in $doc return insert node <p id="{$countf}" n="{$count}">{$l}</p> into db:open('bdd_corpus_' || $titreCorpus) , db:optimize( 'bdd_corpus_' || $titreCorpus, false(), map { 'ftindex': true(), 'stemming':true() } ) ) }; declare %rest:path('/traiteCorpuXml-{$titreCorpus}-{$index}') %output:method('html') function isilex:traiteXmlCorp($titreCorpus, $index){ isi:template( <html> <head> {db:open('scripts')//entry[./@id="headerIsiPhp"]/header} {$isi:Css} </head> <body> <h2>Corpus : {$titreCorpus}</h2> <a href='/traiteCorpuXml-{$titreCorpus}-{xs:integer($index) - 10}'>&lt;-</a> <a href='/traiteCorpuXml-{$titreCorpus}-{xs:integer($index) + 10}'>-&gt;</a> <a href='#' onClick='document.getElementById("inputFiche").value = document.getElementById("txtdef").value; document.getElementById("valid").submit();'>Save</a> { <div id="xml" style="width: 90%;"> <textarea id="txtdef" name="txtDef" width="250px" height="40px;"> { let $display := if ($index='') then 10 else xs:integer($index) let $db := 'bdd_corpus_' || $titreCorpus let $atom:= distinct-values(for $x in db:open($db)//p/@n return $x) for $n in $atom[xs:integer(.) ge ($display - 10)][xs:integer(.) le $display] return <atom> {for $sentences in db:open($db)//p[@n=$n] order by number($sentences/@corpus) order by number($sentences/@n) return $sentences}</atom> } </textarea> <div id="controle"> </div> <form id="valid" name="valid" method="POST" action="/saveCorpusQuit-{$titreCorpus}"> 	 <input type="hidden" id="inputFiche" name="inputFiche" value=""/> 	</form> </div> } <script>{for $x in db:open('scripts')//entry[./@id="codeMirrorStart"]/script return replace($x,'0,1,2,3,4,5','100000000')}</script> </body> </html> ) }; declare %updating %rest:path('/saveCorpusQuit-{$titreCorpus}') %output:method('html') %rest:POST %rest:form-param("inputFiche", "{$fiche}") function isilex:sauveXmlCorp($fiche, $titreCorpus){ ( db:output(<rest:redirect>/traiteCorpuXml-{$titreCorpus}-10</rest:redirect>), let $db := 'bdd_corpus_' || $titreCorpus let $txt := '<t>'|| $fiche||'</t>' let $node := html:parse((normalize-space($txt))) for $newP in $node//p, $x in db:open($db)//p[@id=$newP/@id][@n=$newP/@n] return replace node $x with $newP ) }; 

declare %rest:path('/idefx[{$titreCorpus}]') %output:method('html') %rest:POST %rest:form-param("req", "{$req}") %rest:form-param("fuzzy", "{$fuzzy}") function isilex:idefxXmlCorp($titreCorpus, $req, $fuzzy){ isi:template( <html> <head> {db:open('scripts')//entry[./@id="headerIsiPhp"]/header} {$isi:Css} </head> <body>{ let $db := 'bdd_corpus_' || $titreCorpus let $motif := lower-case(replace(normalize-unicode($req, "NFD"), "[\p{M}]", "")) let $indexes := if ($fuzzy = 'on') then (for $j in (1 to count(tokenize($motif,"\W+"))) return <index n="{$j}"><entry>{tokenize($motif,"\W+")[$j]}</entry>{for $x in ft:tokens($db) return $x[. contains text {ft:tokenize($motif)[$j]} using stemming using fuzzy using case insensitive using diacritics insensitive]}</index>) else (for $j in (1 to count(tokenize($motif,"\W+"))) return <index n="{$j}"><entry>{tokenize($motif,"\W+")[$j]}</entry>{for $x in ft:tokens($db) return $x[. contains text {ft:tokenize($motif)[$j]} using stemming using wildcards using case insensitive using diacritics insensitive]}</index>) let $indexesGeneraux := for $x in ft:tokens($db) return $x return if (matches($motif,' [a-z0-9]')) then <r> <table> <th>Ecart</th><th>Score</th> {for $i in (-4 to 11) return <th>{$i}</th>} { for $x in db:open($db)/* let $source := ft:tokenize($x) let $ind:= for $j in (1 to count(tokenize($motif," "))) for $x in $indexes[./@n=$j]/entry return if (index-of($source,$x) != 0) then <ngr n="{$j}">{for $o in index-of($source,$x) return <i>{$o}</i>}</ngr> else () let $res := for $x in $ind[./@n=1]/i, $y in $ind[./@n!=1]/i[xs:integer(.) - 10 <= xs:integer($x)][xs:integer(.) > xs:integer($x)] return <r st="{$x}" e="{$y}" dif="{$y - $x}"/> return for $w in $res let $dif := xs:integer(number($w/@dif)) order by $dif return <tr><td id="score">{$dif}</td> <td id="{if (round-half-to-even(( 100 * count($res[xs:integer(number(./@dif))=$dif])) div (max((for $x in distinct-values($res//@dif) return count($res[./@dif=$x])))))=100) then "scoretop" else "score" }"> {round-half-to-even(( 100 * count($res[xs:integer(number(./@dif))=$dif])) div (max((for $x in distinct-values($res//@dif) return count($res[./@dif=$x]))))) }% </td> { for $p at $n in (xs:integer(number($w/@st)) - 4 to xs:integer(number($w/@e) + 4)) where $n < 16 return if ($p = xs:integer(number($w/@st)) or $p = xs:integer(number($w/@e)) ) then <td id="masterkw">{$source[$p]}</td> else <td>{$source[$p]} <div id="small">({data($indexesGeneraux[.=$source[$p]]/@count)})</div></td> }</tr> }</table> </r> else <r> Levenshtein: {if ($fuzzy = 'on') then 'activé' else 'désactivé'}<table>{for $x in db:open($db)/*[. contains text {$motif} using stemming using fuzzy] return <tr><td>{ft:mark($x[.//text() contains text {$motif} using stemming using fuzzy],'mark')}</td></tr>}</table></r> } </body> </html> ) }; declare %rest:path('/cssEdit') %output:method("html") %output:omit-xml-declaration("no") function isilex:editCss() as element(html) { <html> { if ( $isi:testid4 ) then let $page := <texteAccueil>  <h2>Edit CSS and Designs</h2>  <p>Css Template Edit</p>  <p>Choose the third Css (3) under "WebSite Menu" ---&gt; "CSS".</p>  <a href='/edit-Header' class='button'>Edit Headers</a>  <a href='/edit-left' class='button'>Edit Left Menu</a>  <a href='/edit-classes' class='button'>Edit Css Classes</a>  <p>XML Datas presentation Template Edit</p> <a class='button' href='/edit-Fiches'>Edit Fiches Xml</a>  </texteAccueil> return isi:template($page) else isi:template(isi:lang-text('unauthorized_access')) } </html> }; 